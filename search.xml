<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>用Nginx搭建文件服务器</title>
      <link href="/2022/12/05/%E7%94%A8Nginx%E6%90%AD%E5%BB%BA%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2022/12/05/%E7%94%A8Nginx%E6%90%AD%E5%BB%BA%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.daly.top/">我的博客</a> 查看</p><h4 id="Nginx-间介"><a href="#Nginx-间介" class="headerlink" title="Nginx 间介"></a>Nginx 间介</h4><p>Nginx(“engine x”)是一款是由俄罗斯的程序设计师Igor Sysoev所开发高性能的 Web和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。</p><p>在高连接并发的情况下，Nginx是Apache服务器不错的替代品。</p><p>Nginx 安装<br>系统平台：CentOS release 6.6 (Final) 64位。</p><p>一、安装编译工具及库文件<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum -y install make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel</span><br><span class="line">```    </span><br><span class="line">二、首先要安装 PCRE</span><br><span class="line">PCRE 作用是让 Nginx 支持 Rewrite 功能。</span><br><span class="line"></span><br><span class="line">1、下载 PCRE 安装包，下载地址： http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz      </span><br><span class="line"></span><br><span class="line">``` conf</span><br><span class="line">[root@bogon src]# cd /usr/local/src/</span><br><span class="line">[root@bogon src]# wget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</span><br></pre></td></tr></table></figure></p><p>2、解压安装包:    </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon src]# tar zxvf pcre-8.35.tar.gz</span><br><span class="line">```      </span><br><span class="line">3、进入安装包目录   </span><br><span class="line"></span><br><span class="line">``` conf</span><br><span class="line"> [root@bogon src]# cd pcre-8.35</span><br><span class="line">```      </span><br><span class="line">4、编译安装   </span><br><span class="line"></span><br><span class="line">``` conf</span><br><span class="line">[root@bogon pcre-8.35]# ./configure</span><br><span class="line">[root@bogon pcre-8.35]# make &amp;&amp; make install</span><br><span class="line"> ```           </span><br><span class="line">5、查看pcre版本      </span><br><span class="line">``` conf</span><br><span class="line"> [root@bogon pcre-8.35]# pcre-config --version</span><br><span class="line"> ```   </span><br><span class="line">安装 Nginx    </span><br><span class="line">1、下载 Nginx，下载地址：https://nginx.org/en/download.html     </span><br><span class="line"></span><br><span class="line">``` conf </span><br><span class="line">[root@bogon src]# cd /usr/local/src/</span><br><span class="line">[root@bogon src]# wget http://nginx.org/download/nginx-1.6.2.tar.gz  </span><br><span class="line">```    </span><br><span class="line"> 2、解压安装包      </span><br><span class="line">``` conf</span><br><span class="line">[root@bogon src]# tar zxvf nginx-1.6.2.tar.gz </span><br><span class="line">```  </span><br><span class="line">3、进入安装包目录 </span><br><span class="line"></span><br><span class="line">``` conf</span><br><span class="line">[root@bogon src]# cd nginx-1.6.2</span><br><span class="line">```    </span><br><span class="line">4、编译安装    </span><br><span class="line"></span><br><span class="line">``` conf</span><br><span class="line">[root@bogon nginx-1.6.2]# ./configure --prefix=/usr/local/webserver/nginx --with-http_stub_status_module --with-http_ssl_module --with-pcre=/usr/local/src/pcre-8.35      </span><br><span class="line">[root@bogon nginx-1.6.2]# make &amp;&amp; make install   </span><br><span class="line"></span><br><span class="line">```   </span><br><span class="line">5、查看nginx版本    </span><br><span class="line">``` conf</span><br><span class="line">[root@bogon nginx-1.6.2]# /usr/local/webserver/nginx/sbin/nginx -v</span><br></pre></td></tr></table></figure><p>到此，nginx安装完成。</p><p>Nginx 配置Nginx 安装<br>系统平台：CentOS release 6.6 (Final) 64位。</p><p>一、安装编译工具及库文件<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel</span><br></pre></td></tr></table></figure><br>二、首先要安装 PCRE   </p><p>PCRE 作用是让 Nginx 支持 Rewrite 功能。     </p><p>1、下载 PCRE 安装包，下载地址： <a href="http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz">http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</a>        </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon src]# cd /usr/local/src/</span><br><span class="line">[root@bogon src]# wget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、解压安装包:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon src]# tar zxvf pcre-8.35.tar.gz</span><br></pre></td></tr></table></figure><br>3、进入安装包目录<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon src]# cd pcre-8.35</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>4、编译安装<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon pcre-8.35]# ./configure</span><br><span class="line">[root@bogon pcre-8.35]# make &amp;&amp; make install</span><br></pre></td></tr></table></figure><br>5、查看pcre版本<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon pcre-8.35]# pcre-config --version</span><br></pre></td></tr></table></figure></p><p>安装 Nginx<br>1、下载 Nginx，下载地址：<a href="https://nginx.org/en/download.html">https://nginx.org/en/download.html</a><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon src]# cd /usr/local/src/</span><br><span class="line">[root@bogon src]# wget http://nginx.org/download/nginx-1.6.2.tar.gz</span><br><span class="line"></span><br></pre></td></tr></table></figure><br> 2、解压安装包<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon src]# tar zxvf nginx-1.6.2.tar.gz</span><br></pre></td></tr></table></figure><br>3、进入安装包目录<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon src]# cd nginx-1.6.2</span><br></pre></td></tr></table></figure><br>4、编译安装<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon nginx-1.6.2]# ./configure --prefix=/usr/local/webserver/nginx --with-http_stub_status_module --with-http_ssl_module --with-pcre=/usr/local/src/pcre-8.35</span><br><span class="line">[root@bogon nginx-1.6.2]# make &amp;&amp; make install</span><br></pre></td></tr></table></figure><br>5、查看nginx版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon nginx-1.6.2]# /usr/local/webserver/nginx/sbin/nginx -v</span><br></pre></td></tr></table></figure><p>到此，nginx安装完成。</p><p>Nginx 配置</p><p>配置server节点下的location部分和server下root指定访问目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">  server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        root /usr/local/static/;</span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            autoindex on;             #开启索引功能</span><br><span class="line">            autoindex_exact_size off; # 关闭计算文件确切大小（单位bytes），只显示大概大小（单位kb、mb、gb）</span><br><span class="line">            autoindex_localtime on;   # 显示本机时间而非 GMT 时间</span><br><span class="line">            charset utf-8; # 避免中文乱码</span><br><span class="line">            #root   html;</span><br><span class="line">            #index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">｝</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>检查配置文件nginx.conf的正确性命令：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon conf]# /usr/local/webserver/nginx/sbin/nginx -t</span><br></pre></td></tr></table></figure></p><p>Nginx 其他命令<br>以下包含了 Nginx 常用的几个命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/webserver/nginx/sbin/nginx                      # 启动 Nginx</span><br><span class="line">/usr/local/webserver/nginx/sbin/nginx -s reload            # 重新载入配置文件</span><br><span class="line">/usr/local/webserver/nginx/sbin/nginx -s reopen            # 重启 Nginx</span><br><span class="line">/usr/local/webserver/nginx/sbin/nginx -s stop              # 停止 Nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>参考文章<br>  <a href="https://www.runoob.com/linux/nginx-install-setup.html">https://www.runoob.com/linux/nginx-install-setup.html</a><br>  <a href="https://cloud.tencent.com/developer/article/1498209">https://cloud.tencent.com/developer/article/1498209</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
          <category> 服务器 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>每日一记03</title>
      <link href="/2022/12/04/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B003/"/>
      <url>/2022/12/04/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B003/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.daly.top/">我的博客</a> 查看</p><h3 id="足球解说贺炜说过的经典名句"><a href="#足球解说贺炜说过的经典名句" class="headerlink" title="足球解说贺炜说过的经典名句"></a>足球解说贺炜说过的经典名句</h3><blockquote><p>你爱上一件事物当让然不是爱他的成败，你爱的是他的气质对不对；<br>  任何敢于放弃自我，不断革新为心中的目标不断地改变自己的人都值得尊敬；<br>  “也许他们会明白莫迫桑的一句话”， 生活可能不会像我们想象中的那么好<br>  但是也不会像我们想象中那么糟糕！人的脆弱和坚强都是超乎了自己的想象，有时候可能脆弱的一句话就泪流满面，有时候你发现自己咬着牙已经走了很久的路。<br>  “人生当中成功只是一时的，失败却是主旋律”，罗曼罗兰说过：这个世界只有一种英雄主义，那就是认清生活中的真相并任然热爱它，难道向上攀爬的那条路不比站在顶峰更让人热血澎湃吗？<br>  人生当中往往是这样一件看似不经意的小事，往往就是命运的转折点，一次看似普通的再见，其实就是永别，缘分在这一瞬间是“戛然而止”！<br>  人生当中总是有你能力所不及的范围，但是如果你在你的能力范畴内，你尽到了自己全部的努力哪里还有什么可以遗憾的呢！<br>  人类情绪当中最高昂的情绪和最低落的情绪交相辉映而成，也许只有在失利者落寞的陪伴之下，胜利者才感觉到幸福的滋味，而我们旁观者在这样的情感交织当中终于体会到活着的意味；<br>  去除睡眠人的一生只有一万多天，但人与人之间的区别就在于，你究竟是活了一万天，还是只活了一天重复了一万次；<br>  “每个人都有梦想” 但是不一定每个人的梦想都能实现，其实大部分人都能达成自己的梦想，其实大部分人都实现不了梦想，但是最让人敬佩的人，不光是那些实现梦想的人，还有那些一直努力到梦想大门口，也许他们会倒在那个门口，但是你知道他拼尽了最后的一份力气。<br>  在人生当中最为辉煌的一天，并不是功成名就的那一天，而是从悲叹和绝望中产生对人生挑战的欲望，并且勇敢的迈向这种挑战的那一天。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 每记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>网络原理</title>
      <link href="/2022/12/01/%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"/>
      <url>/2022/12/01/%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.daly.top/">我的博客</a> 查看</p><ul><li><strong>什么是网关</strong></li></ul><hr><p>  网关（Gateway）又称网间连接器、协议转换器。网关在网络层以上实现网络互连，是复杂的互连设备，仅用于两个高层协议不同的网络<br>  互连。网关既可以用于广域网互连，也可以用于局域网互连。网关是一种充当转换重任的计算机系统或设备。使用在不同的通讯协议、数据格式或语言，甚至体系结构完全不同的两种系统之间，网关是一个翻译器。与网桥只是简单地传达信息不同，网关对收到的信息重新打包。以适应目的的系统的需求。同层—应用层。</p><hr><p><strong>*什么是广域网</strong></p><hr><p>   广域网（wide area Networke,缩写 WAN)，又称广域网、外网、公网。是连接不同地区局域网或城域网计算机通讯的远程网。通常跨很大的物理范围，所覆盖的范围从几十公里到几千公里，它能连接多个地区、城市和国家，或横跨几个洲并能提供远距离通讯，形成国际性的远程网络。广域网并不等于互联网。</p><hr><ul><li><strong>什么是网桥</strong></li></ul><hr><p>网桥（Bridge）是早期的两端口二层网络设备，用来连接不同的网段。网桥的两个端口分别有一条独立的交换信道，不是共享一条背板总线，可隔离冲突域。网桥比集线器（HUB）性能要好，集线器上的各个端口都是共享一个背板线路总线的。后来网桥被具有更多的端口、同时也可隔离冲突域的交换机（Switch）所取代。</p><p>网桥（Bridge）像一个聪明的中继器。中继器从一个网络电缆里接收信号， 放大它们，将其送入下一个电缆。相比较而言，网桥对从关卡上传下来的信息更敏锐一些。网桥是一种对帧进行转发的技术，根据MAC分区块，可隔离碰撞。网桥将网络的多个网段在数据链路层连接起来。<br>网桥也叫桥接器，是连接两个局域网的一种存储/转发设备，它能将一个大的LAN分割为多个网段，或将两个以上的LAN互联为一个逻辑LAN，使LAN上的所有用户都可访问服务器。<br>扩展局域网最常见的方法是使用网桥。最简单的网桥有两个端口，复杂些的网桥可以有更多的端口。网桥的每个端口与一个网段相连。</p><hr><ul><li><strong>内网穿透的原理解析</strong></li></ul><hr><p>  在互联网信息时代的今天，经常会听到外网连接。而与外网链接的是一种内网网络，很多的家庭和公司利用内部网络来进行多台电脑之间的资源共享，其中所有用到的技都是内网穿透技术，但是很多人对这种技术不了解，下面我们一起来看看内网穿透的原理吧！</p><hr><ul><li><strong>ADSL(非对称数字用户线路)</strong></li></ul><hr><p>所谓非对称主要体现在上行速率和下行速率的非对称性上。它利用数字编码技术从现有铜质电话线上获取最大数据传输容量，同时又不干扰在同一条线上进行的常规话音服务。其原因是它用电话话音传输以外的频率传输数据。用户可以在上网的同时打电话或发送传真，而这将不会影响通话质量或降低下载Internet内容的速度。</p><hr><h4 id="OSI网络七层协议以及每层的作用"><a href="#OSI网络七层协议以及每层的作用" class="headerlink" title="* OSI网络七层协议以及每层的作用"></a>* OSI网络七层协议以及每层的作用</h4><hr><div class="table-container"><table><thead><tr><th>OSI层</th><th>功能</th><th>TCP/IP协议</th></tr></thead><tbody><tr><td>应用层（Application layer）</td><td>文件传输，电子邮件，文件服务，虚拟终端</td><td>TFTP、HTTP、SNMP、FTP、SMTP、DNS、Telnet</td></tr><tr><td>表示层（Presentation layer）</td><td>数据格式化，代码转换，数据加密</td><td>没有协议</td></tr><tr><td>会话层(Session layer)</td><td>解除或建立与其他接点的联系</td><td>没有协议</td></tr><tr><td>传输层（Transport layer）</td><td>提供端对端接口</td><td>TCP，UDP</td></tr><tr><td>网络层（Network layer）</td><td>为数据包选择路由</td><td>IP、ICMP、RIP、OSPF、BGP、IGMP</td></tr><tr><td>数据链路层（Data link layer)</td><td>传输有地址的帧，错误检测功能</td><td>SLIP、CSLIP、PPP、ARP、RARP、MTU</td></tr><tr><td>物理层（physical layer）</td><td>以二进制形式在物理层媒体上传输数据</td><td>ISO2110、IEEE802、IEEE802.2</td></tr></tbody></table></div><hr><ol><li>物理层：该层包括物理连网媒介、如电缆连线连接器，物理层的协议产生并检测电压以便能够发送和接收携带数据的信号。如中继器、集线器、网线、HUB等。这层的数据叫比特。</li><li>数据链路层:控制网络层和物理层之间的通讯，主要功能是如何在不可靠的物理线路上进行数据的可靠传递。如：网卡、网桥、交换机。 这一层是和包结构和字段打交道的和事佬。一方面接收来自网络层（第三层）的数据帧并为物理层封装这些帧；另一方面数据链路层把来自物理层的原始数据比特封装到网络层的帧中。起着重要的中介作用。</li><li>网络层：主要功能是将网络地址翻译成对应的地址，并决定如何将数据从发送方路由到接受方。如路由器、防火墙、多层交换机。<br>网络层确定把数据包传送到其目的地的路径。就是把逻辑网络地址转换为物理地址。如果数据包太大不能通过路径中的一条链路送到目的地，那么网络层的任务就是把这些包分成较小的包。</li><li>传输层: 最重要的层，传输协议的同时进行流量传输控制或者是基于对方可接受数据的快慢程度规定适当的发送速率。包括全双工半双工、流控制、错误恢复服务。同时能按照网络能处理的最大尺寸将较长的数据包进行强行分割，进程、端口、TCP、UDP协议<br>5.会话层: 负责在网络中的两点之间建立和维护通讯。如建立回话、断点续传<br>在分开的计算机上的两种应用程序之间建立一种虚拟链接，这种虚拟链接称为会话（session）。会话层通过在数据流中设置检查点而保持应用程序之间的同步。允许应用程序进行通信的名称识别和安全性的工作就由会话层完成。<br>6.表示层：应用程序和网络之间的翻译官，管理数据的加密解密。如编码方式、图像编解码、交换机<br>定义由应用程序用来交换数据的格式。在这种意义上，表示层也称为转换器（translator）。该层负责协议转换、数据编码和数据压缩。转发程序在该层进行服务操作。</li><li>应用层：负责对软件提供接口使用网络服务。如应用程序，FTP、SMTP、HTTP</li></ol><ul><li><h4 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h4>网络中唯一定位一台设备的逻辑地址，类似我们的电话号码。</li></ul><p>在互联网中我们访问一个网站或使用一个网络服务最终都需要通过IP定位到每一台主机，如访问baidu网站：<br><img src="en-resource://database/449:1" alt="7da6f457cafcb3d2b472254910252ea3.png"><br>其中220.181.112.244就是一个公网的IP地址，他最终指向了一台服务器。</p><p>IP地址是IP协议提供的一种统一的地址格式，它为互联网上的每一个网络和每一台主机分配一个逻辑地址，以此来屏蔽物理地址的差异。</p><p>内网IP可以同时出现在多个不同的局域网络中，如A公司的U1用户获得了192.168.0.5，B公司的U3用户也可以获得192.168.0.5；但公网IP是唯一的，因为我们只有一个Internet。</p><p>3.域名</p><p>域名是IP的别名，便于记忆，域名最终通过DNS解析成IP地址。<br><img src="en-resource://database/450:1" alt="7e2122cb914743cf7cb5a3f366e7c2c4.png"></p><p>P V4是一个32位的数字，IP V6有128位，要记住一串毫无意义的数字非常困难，域名解决了这个问题。<br><img src="en-resource://database/451:1" alt="c6a5e92ea549c7e7c83746b4aa410fb6.png"></p><p>DNS查询过程如下，最终将域名变成IP地址</p><p><img src="en-resource://database/448:1" alt="60b5720cafe17b5933f92ac939668f7e.png"></p><ol><li>NAT<br> NAT（network address translation）即网络地址转换，NAT能将其本地的地址转换成全球的ip<br> 地址。内网的一些主机本来已经分配到了本地IP地址（如局域网DHCP分配的IP），但是现在又想和<br> 因特网上的主机通讯（并不需要加密）时，可使用NAT方法。</li></ol><p>NAT不仅能解决了lP地址不足与共享上网的问题，而且还能够有效地避免来自网络外部的攻击，隐藏并保护网络内部的计算机。多路由器可完成NAT功能。</p><p>NAT的实现方式：</p><p>静态转换是指将内部网络的私有IP地址转换为公有IP地址，IP地址对是一对一。</p><p>动态转换是指将内部网络的私有IP地址转换为公用IP地址时，IP地址是不确定的，是随机的。</p><p>端口多路复用（Port address Translation,PAT)，内部网络的所有主机均可共享一个合法外部IP地址实现对Internet的访问，从而可以最大限度地节约IP地址资源。同时又可隐藏网络内部的所有主机，有效避免来自internet的攻击。因此，目前网络中应用最多的就是端口多路复用方式。</p><p>应用程序级网关技术（Application Level Gateway）ALG：传统的NAT技术只对IP层和传输层头部进行转换处理，ALG它能对这些应用程序在通信时所包含的地址信息也进行相应的NAT转换</p><p><img src="en-resource://database/452:1" alt="d74181ac2f5d2f8a0b94e4010d78db6b.png"></p><ol><li><p>Proxy即代理，被广泛应用于计算机领域，主要分为正向代理与反向代理：</p><ol><li>Proxy</li></ol></li></ol><p>Proxy即代理，被广泛应用于计算机领域，主要分为正向代理与反向代理：</p><p> 正向代理</p><p>比如X花店代A,B,C,D,E五位男生向Candy女生送匿名的生日鲜花，这里的X花店就是5位顾客的代理，花店代理的是客户，隐藏的是客户。这就是我们常说的代理。</p><p>正向代理隐藏了真实的请求客户端。服务端不知道真实的客户端是谁，客户端请求的服务都被代理服务器代替来请求，某些科学上网工具扮演的就是典型的正向代理角色。用浏览器访问<a href="http://www.google.com时被墙了，于是你可以在国外搭建一台代理服务器，让代理帮我去请求google.com，代理把请求返回的相应结构再返回给我。">http://www.google.com时被墙了，于是你可以在国外搭建一台代理服务器，让代理帮我去请求google.com，代理把请求返回的相应结构再返回给我。</a></p><p>当多个客户端访问服务器时服务器不知道真正访问自己的客户端是那一台。正向代理中,proxy和client同属一个LAN,对server透明;<br><img src="en-resource://database/454:1" alt="99958d678c91918b38aaf4aa8a9bb81b.png"></p><p>反向代理</p><p>拨打10086客服电话，接线员可能有很多个，调度器会智能的分配一个接线员与你通话。这里的调度器就是一个代理，只不过他代理的是接线员，客户端不能确定真正与自己通话的人，隐藏与保护的是目标对象。</p><p>反向代理隐藏了真实的服务端，当我们请求 ww.baidu.com 的时候，就像拨打10086一样，背后可能有成千上万台服务器为我们服务，但具体是哪一台，你不知道，也不需要知道，你只需要知道反向代理服务器是谁就好了，ww.baidu.com 就是我们的反向代理服务器，反向代理服务器会帮我们把请求转发到真实的服务器那里去。Nginx就是性能非常好的反向代理服务器，用来做负载均衡。</p><p><img src="en-resource://database/453:1" alt="197b331cb21225cd8c7041cbcb627f13.png"></p><p>反向代理中,proxy和server同属一个LAN,对client透明。</p><ol><li>DDNS</li></ol><p>DDNS即动态域名解析，是将用户的动态IP地址映射到一个固定的域名解析服务上，用户每次连接网络的时候，客户端程序就会通过信息传递把该主机的动态IP地址传送给位于服务商主机上的服务器程序，服务程序负责提供DNS服务并实现动态域名解析。就是说DDNS捕获用户每次变化的IP地址，然后将其与域名相对应，这样域名就可以始终解析到非固定IP的服务器上，互联网用户通过本地的域名服务器获得网站域名的IP地址，从而可以访问网站的服务。</p><ol><li>为什么需要内网穿透</li></ol><p>当内网中的主机没有静态IP地址要被外网稳定访问时可以使用内网穿透</p><p>在互联网中唯一定位一台主机的方法是通过公网的IP地址，但固定IP是一种非常稀缺的资源，不可能给每个公司都分配一个，且许多中小公司不愿意为高昂的费用买单，多数公司直接或间接的拨号上网，电信部门会给接入网络的用户分配IP地址，以前上网用户少的时候基本分配的都是临时的静态IP地址，租约过了之后可能会更换成另一个IP地址，这样外网访问就不稳定，因为内网的静态IP地址一直变化，为了解决这个问题可以使用动态域名解析的办法变换域名指向的静态IP地址。但是现在越来越多的上网用户使得临时分配的静态IP地址也不够用了，电信部门开始分配一些虚拟的静态IP地址，这些IP是公网不能直接访问的，如以125开头的一些IP地址，以前单纯的动态域名解析就不好用了</p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows 常用命令</title>
      <link href="/2022/11/30/Windows%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/11/30/Windows%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.daly.top/">我的博客</a> 查看</p><h3 id="Windows-Commond"><a href="#Windows-Commond" class="headerlink" title="Windows Commond"></a>Windows Commond</h3><div class="table-container"><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td> shutdown -s -t 时间单位ms(cmd)</td><td>关机</td></tr><tr><td> shutdown -a (cmd)</td><td>取消关机</td></tr><tr><td> slidetoshutdown (cmd)</td><td>滑动关机</td></tr><tr><td> logff (cmd)</td><td>注销</td></tr><tr><td> chkdsk (cmd)</td><td>清理电脑垃圾</td></tr><tr><td> slmgr /smks kms.o3k.org ,lmgr /ato (cmd)</td><td>激活windows系统</td></tr><tr><td> slmgr.vbs -xpr(cmd)</td><td>查看windows系统激活状态</td></tr><tr><td> msconfig(cmd)</td><td>开机自启关闭</td></tr><tr><td> recent(cmd)</td><td>查看最近打开文件或文件夹</td></tr><tr><td> systeminfo 查看的文件名;(bat)</td><td>查看电脑配置</td></tr><tr><td> shell:startup (cmd)</td><td>找到启动文件夹</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>每天一记02</title>
      <link href="/2022/11/16/%E6%AF%8F%E5%A4%A9%E4%B8%80%E8%AE%B002/"/>
      <url>/2022/11/16/%E6%AF%8F%E5%A4%A9%E4%B8%80%E8%AE%B002/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.daly.top/">我的博客</a> 查看</p><h3 id="2018-克拉克获奖感言"><a href="#2018-克拉克获奖感言" class="headerlink" title="2018 克拉克获奖感言"></a>2018 克拉克获奖感言</h3><blockquote><p>女生们、先生们，晚上好，<br>很荣幸获得Clarke Award for Imagina-tion in Service to society Award.<br>这个奖项是对想象力的奖励，而想象力是人类所拥有的一种似乎只应该属于神的能力，它存在的意义也是超出我们的想象。有历史学家说过，人类之所以能超越地球上的其他物种建立文明，主要是因为他们能够在自己的大脑中创建出现实中不存在的东西。在未来，当人工智能拥有超过人类的智力时，想象力也许是我们对于他们所拥有的唯一优势。<br>科幻小说是基于想象力的文学，而最早给我留下深刻印象的是Arthur.Clarke的作品。除了Jules  Verne 和 George Wells 外，Claeke的作品是最早进入中国的西方现代科幻小说。在上世纪八十年代初，中国出版了他的《2001：A Space odyssey》和 《Rendezcous With Rama》。当时文革刚刚结束，旧的生活和信仰已经崩塌，新的还没有建立起来，我和其他年轻人一样，心中一片茫然。这两本书第一次激活了我想象力，思想豁然开朗了许多，有小溪流进大海的的感觉。读完《2001：A Space Odyssey》的那天的深夜，我走出了家门仰望星空，那时中国的天空还没有太多的污染，能够看见银河，在我的眼中，星空与过去完全不一样了，我第一次对宇宙的宏大与神秘产生了敬畏感，这是一种宗教般的感觉。而后来读到的《Rendezvous With Rama》，也是让我惊叹如何可以用想象力构造一个栩栩如生的世界。正是Clarke带给我的这些感受，让我后来成为了一名科幻作家。<br>现在，三十多年过去了，我渐渐发现，我们这一代在上世纪六十年代出生于中国的人，很可能是人类历史上最幸运的人，因为之前没有任何一代人，像我们这样目睹周围的世界发生了如此巨大的变化，像我们这样目睹周围的世界发生的巨大变化，我们生活的世界，与我们童年的世界已经完全是两个是不同的世界，而这种变化还在加速发生着。中国是一个充满未来感的国度，中国的未来可能充满着挑战和危机，但从来没有像现在这样具有吸引力，这就给科幻小说提供了肥沃的土壤，使其在中国受到了空前的关注，作为一个在六十年代出生的科幻小说作家，则是幸运中的幸运。<br>我最初创作科幻小说的目的，是为了逃离平淡的生活，用想象力去接触那些我永远无法到达的神奇时空。但后来发现，周围的世界变得越来越像科幻小说了，这种进程还在飞跃的加速。未来像盛夏的大雨，在我们还来不及撑伞时就扑面而来。同时我也沮丧的发现，当科幻变为现实时，没有人感到神奇，它们很快会成为生活中的一部分。所以我只有让想象力前进到更遥远的时间和空间中去寻找科幻的神奇，科幻小说将以越来越快的速度变成平淡生活的一部分，作为科幻小说作家，我想我们的责任就是在事情变得平淡之前把它们写出来。<br>但另一方面，世界却向着与Clarke的预言相反的方向发展。在《2001：A Space Odyssey》中，在已经过去的2001年，人类已经在调控中建立起壮丽的城市，在月球上建立起永久性的殖民地，巨大的核动力飞船已经航行到土星。而在现实中的2018年，再也没有人登上土星，人类的太空中航行的最远的距离，也就是途径我所在的城市的高速列车两小时的里程。与此同时，信息技术却以超乎想象的速度发展，网络覆盖了整个世界，在IT所营造的越来越舒适的安乐窝了，人们对太空渐渐失去了兴趣，相对于充满艰险的真实太空探索，他们更愿意在VR中体验虚拟的太空，这像是有句话说的”说好的星辰大海，你却只给了我FackBook”（注：这句话因该有英语的原文）<br>这样的现实也反映在科幻小说中，Clarke对太空的瑰丽想象已经渐渐远处，人们的目光冲星空收回，现在的小说，更多的想象人类在网络乌托邦或反乌托邦中的生活，更多的关注现实中所遇到的各种问题，科幻的想象力由Clarke的广阔和深远，变成Cyberpunk的狭窄和内向。<br>作为科幻作家，我一直在努力延续着Clarke的想象，我相信，无垠的太空仍然是人类想象力最好的去向和归宿，我一直在描写宇宙的宏大神奇，描写星际探险，描写遥远世界中的生命和文明，尽管在现在的科幻作家中，这样会显得很幼稚，甚至显得跟不上时代。正如Clarke的墓志铭：”我从未长大，但从未停止成长”。<br>与人们常有的误解不同，科幻小时候并不是在预测未来，他只是把未来的各种可能性排列出来，就像一堆想象里的鹅卵石，摆在那里工人们欣赏和把玩。无数个可能的未来哪一个会成为现实，科幻小说并不能告诉我们，这不是他的任务，也超出了它的能力。<br>但有一点可以确定：从长远的时间尺度来看，在这无数可能的未来中，不管地球到达怎么样的繁荣，那些没有太空航行的未来都是暗淡的。<br>我期待有那么一天，想那些曾经描写过信息时代的科幻小说一样，描述太空航行的科幻小说变得平淡无奇了，那时的火星和小行星带都是乏味的地方，有无数的人在那里谋生；木星和其他众多的卫星已经成为旅游胜地，阻止人们去哪里的唯一障碍就是昂贵的价格。<br>但即使在这个时候，宇宙仍是一个大的无法想象的存在，据我们最近的恒星仍是遥不可及。浩瀚的星空喲官员能够承载我们无穷的想象力。<br>謝謝大家！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 每记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>每天一记02</title>
      <link href="/2022/11/16/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B004/"/>
      <url>/2022/11/16/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B004/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.daly.top/">我的博客</a> 查看</p><h3 id="00后改变了-没改变职场"><a href="#00后改变了-没改变职场" class="headerlink" title="00后改变了/没改变职场"></a>00后改变了/没改变职场</h3><blockquote><p>我们一路奋战不是为了去改变世界，而是不让这个世界改变我们。我有一个问题想问问自己和大家，就是你觉得你改变周围的世界了吗？这个问题不着急回答，我们先等一等。其实我们每一代人最大的差距是在零零后出生的时候，互联网就已经普及了，我们还在跳皮筋踢毽子啊，你们就已经遨游在这伟大的虚拟世界里面了，当我们还活在哪个疯跑、瞎玩和邻里的小伙伴组成的小世界里的时候，你们就已经顺着光缆看见更大的世界了，可是你们看到了什么，你们看到的不光是今天阳光真好，我喜欢的人对我笑了，你们还看到了，熬夜带来的秃头，领导画的大饼，职场里的咸猪手，还有远方燃烧的大火和陌生人身上的铁链，你们都看到了。说老实话，我虽然是一个up主，但我的勇气和表达欲，其实在我的成长过程中，在一点一点的被消磨，我害怕错误，我害怕失去，我害怕我的语言会像一把利刃一样，砍掉我所有拥有的东西，这两天我看到了年轻的你们站在这个舞台上，你们激烈的在讨论文明的冲突，你们在讨论唐山打人事件，你们在为那些被拐卖的妇女儿童奔走呼号的时候，你们从来没有害怕这样的声音，是否会折损你们自己，你们只是在想，你们在意这个世界，如果他要改变的时候只差这一个声音呢！其实在很多人眼中，尤其是很多大人眼中，精神暴露是一件非常幼稚的事情，我们应该少说一点，我们应该不问为什么，我们跟着做就可以了，这让我想到我在高中的时候读到，北京大学2012年中文系毕业典礼的一段讲话，他说这个世界更需要的不是北大人的适应，而是被大人的坚持，对方辩友你们真的觉得，在做的年轻人认为自己的梦想伟大吗！不他们其实比我们想象中更加清醒，人生海海，你我终将平凡，所以这也是我觉得，他们能够在这样的想法当中，坚持自我才能更加可贵，更加难得的事情，就像荣辱里面说了，我们一路奋战，不是为了去改变世界，而是不让这个世界改变我们，最终的结局是什么样子，融入法案颁布了这个世界改变了了，所以回到我们最开始提到的问题，为什么要改变，因为我们相信还有更好的可能，为什么能改变，因为越年轻的灵魂，就越有勇气的光，而勇气是人类最稀缺的美德</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 每记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>每日一记01</title>
      <link href="/2022/11/15/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B001/"/>
      <url>/2022/11/15/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B001/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.daly.top/">我的博客</a> 查看</p><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p> 从今天开始, 我也要立flag, 以”每天一记”为标题，记录每天的所见所闻，当然肯定不是什么新闻八卦、心灵鸡汤之类的事情;只是平常的有价值有意义可以提升自我的事情。</p><h5 id="每日一记01"><a href="#每日一记01" class="headerlink" title="每日一记01"></a>每日一记01</h5><p>   等我们有了一年五百英镑和自己的房子；等我们养成了自由的习惯和勇于说出自己心中所想；等我们稍微逃离公用的起居室，学会人与人之间的关系，而不是人与现实的关系看人；<br>   等我们学会从事物本身看人看树看一切。等我们越过弥尔顿的亡灵，再也没有人能挡住我们的视线；等我们面对现实，因为这就是现实，我们没有臂膀可以依靠，只能自己前行；<br>   我坚信，只要我们努力，“他”就会到来！因此无论多么的贫穷和默默无闻，我们的努力都是值得的；</p>]]></content>
      
      
      <categories>
          
          <category> 每记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CG标准函数库</title>
      <link href="/2022/04/26/CG%E6%A0%87%E5%87%86%E5%87%BD%E6%95%B0%E5%BA%93/"/>
      <url>/2022/04/26/CG%E6%A0%87%E5%87%86%E5%87%BD%E6%95%B0%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h5 id="01-常用数学函数"><a href="#01-常用数学函数" class="headerlink" title="01. 常用数学函数"></a>01. 常用数学函数</h5><div class="table-container"><table><thead><tr><th>函数</th><th>功能描述   </th></tr></thead><tbody><tr><td>abs(x)</td><td>返回输入函数的绝对值 </td></tr><tr><td>all(x)</td><td>如果输入函数均不为0，则返回ture;否则返回false。&amp;&amp;运算</td></tr><tr><td>any(x)</td><td>输入参数只要有其中一个不为0，则返回true</td></tr><tr><td>clamp(x,a,b)</td><td>如果x值小于a，则返回a；如果x值大于b，返回b；否则，返回x。</td></tr><tr><td>asin(x)</td><td>反正弦函数，输入参数取值区间为[-1,1],返回的角度范围为[-2π,2π]</td></tr><tr><td>cos(x)</td><td>返回弧度x的余弦值。返回值范围为[−1,1]</td></tr><tr><td>cosh(x)</td><td>双曲余弦（hyperbolic cosine）函数，计算x的双曲余弦值。</td></tr><tr><td>acos(x)</td><td>反余切函数，输入参数范围[-1,1],返回[1,π]区间的角度值</td></tr><tr><td>atan(x)</td><td>反正切函数，输入参数取值为[-2π,2π]</td></tr><tr><td>atan2(y,x)</td><td>计算y/x的反正切值。实际和atan(x)函数功能完全一样，只有输入参数不同。atan(x) = atan2(x,float(1));</td></tr><tr><td>cross(A,B)</td><td>返回两个三元向量的叉积(cross product)。注意，输入参数必须是三元向量！</td></tr><tr><td>degrees(x)</td><td>输入参数为弧度值(radians),函数将其转换为角度值(degrees)</td></tr><tr><td>determinant(m)</td><td>计算矩阵的行列式因子</td></tr><tr><td>dot(A,B)</td><td>返回A和B的点积(dot product)。参数A和B可以是标量，也可以是向量（输入参数方面，点积和叉积函数有很大不同）。</td></tr><tr><td>exp(x)</td><td>计算ex的值，e=2.71828182845904523536</td></tr><tr><td>exp2(x)</td><td>计算2x的值</td></tr><tr><td>ceil(x)</td><td>对输入参数向上取整。例如： ceil(float(1.3)),其返回值为2.0</td></tr><tr><td>floor(x)</td><td>对输入参数向下取整。例如floor(float(1.3))返回的值为1.0；但是floor(float(-1.3))返回的值为-2.0。该函数与ceil(x)函数相对应。</td></tr><tr><td>fmod(x,y)</td><td>返回x/y的余数。如果y为0，结果不可预料。</td></tr><tr><td>frac(x)</td><td>返回标量或矢量的小数</td></tr><tr><td>frexp(x, out i)</td><td>将浮点数x分解为尾数和指数，即x=m∗2i，返回m，并将指数存入i中；如果x为0，则尾数和指数都返回0</td></tr><tr><td>isfinite(x)</td><td>判断标量或者向量中的每个数据是否是有限数，如果是返回true；否则返回false;</td></tr><tr><td>isinf(x)</td><td>判断标量或者向量中的每个数据是否是无限，如果是返回true；否则返回false;</td></tr><tr><td>isnan(x)</td><td>判断标量或者向量中的每个数据是否是非数据(not-a-numberNaN)，如果是返回true；否则返回false;</td></tr><tr><td>ldexp(x, n)</td><td>计算x∗2n的值</td></tr><tr><td>lerp(a, b, f)</td><td>计算(1−f)∗a+b∗f或者a+f∗(b−a)的值。即在下限a和上限b之间进行插值，f表示权值。注意，如果a和b是向量，则权值f必须是标量或者等长的向量。</td></tr><tr><td>lit(NdotL, NdotH, m)</td><td>N表示法向量；L表示入射光向量；H表示半角向量；m表示高光系数。函数计算环境光、散射光、镜面光的贡献，返回的4元向量。X位表示环境光的贡献，总是1.0;Y位代表散射光的贡献，如果 N∙L&lt;0，则为0；否则为N∙L Z位代表镜面光的贡献，如果N∙L&lt;0 或者N∙H&lt;0，则位0；否则为(N∙L)m;W位始终位1.0</td></tr><tr><td>log(x)</td><td>计算ln(x)的值，x必须大于0</td></tr><tr><td>log2(x)</td><td>计算log(x)2的值，x必须大于0</td></tr><tr><td>log10(x)</td><td>计算log(x)10的值，x必须大于0</td></tr><tr><td>max(a, b)</td><td>比较两个标量或等长向量元素，返回最大值。</td></tr><tr><td>min(a,b)</td><td>比较两个标量或等长向量元素，返回最小值。</td></tr><tr><td>modf(x, out ip)</td><td>把x分解成整数和分数两部分，每部分都和x有着相同的符号，整数部分被保存在ip中，分数部分由函数返回</td></tr><tr><td>mul(M, N)</td><td>矩阵M和矩阵N的积，计算方法如下 mul(M,N)=⎡⎣⎢⎢⎢M11M12M13M14M21M22M23M24M31M32M33M34M41M42M43M44⎤⎦⎥⎥⎥⎡⎣⎢⎢⎢N11N12N12N13N21N22N23N24N31N32N33N34N41N42N43N44⎤⎦⎥⎥⎥</td></tr><tr><td>mul(M, v)</td><td>矩阵M和列向量v的积，公式如下 mul(M,v)=⎡⎣⎢⎢⎢M11M12M13M14M21M22M23M24M31M32M33M34M41M42M43M44⎤⎦⎥⎥⎥⎡⎣⎢⎢⎢v1v2v3v4⎤⎦⎥⎥⎥</td></tr><tr><td>mul(v, M)</td><td>行向量v和矩阵M的积，公式如下 mul(v,M)=[v1v2v3v4]⎡⎣⎢⎢⎢M11M12M13M14M21M22M23M24M31M32M33M34M41M42M43M44⎤⎦⎥⎥⎥</td></tr><tr><td>noise(x)</td><td>根据它的参数类型，这个函数可以是一元、二元或三元噪音函数。返回的值在0和1之间，并且通常与给定的输入值一样</td></tr><tr><td>pow(x, y)</td><td>xy</td></tr><tr><td>radians(x)</td><td>函数将角度值转换为弧度值</td></tr><tr><td>round(x)</td><td>返回四舍五入值。</td></tr><tr><td>rsqrt(x)</td><td>x的平方根的倒数，x必须大于0</td></tr><tr><td>saturate(x)</td><td>把x限制到[0,1]之间</td></tr><tr><td>sign(x)</td><td>如果x&gt;0则返回1；否则返回0</td></tr><tr><td>sin(x)</td><td>输入参数为弧度，计算正弦值，返回值范围 为[-1,1]</td></tr><tr><td>sincos(float x, out s, out c)</td><td>该函数是同时计算x的sin值和cos值，其中s=sin(x)，c=cos(x)。该函数用于“同时需要计算sin值和cos值的情况”，比分别运算要快很多!</td></tr><tr><td>sinh(x)</td><td>计算x的双曲正弦</td></tr><tr><td>smoothstep(min, max, x)</td><td>值x位于min、max区间中。如果x=min，返回0；如果x=max，返回1；如果x在两者之间，按照下列公式返回数据：  −2∗(x−minmax−min)3+3∗(x−minmax−min)2</td></tr><tr><td>step(a, x)</td><td>如果x&lt;a，返回0；否则，返回1</td></tr><tr><td>sqrt(x)</td><td>求x的平方根，x√，x必须大于0</td></tr><tr><td>tan(x)</td><td>计算x正切值</td></tr><tr><td>tanh(x)</td><td>计算x的双曲线切线</td></tr><tr><td>transpose(M)</td><td>矩阵M的转置矩阵 如果M是一个AxB矩阵，M的转置是一个BxA矩阵，它的第一列是M的第一行，第二列是M的第二行，第三列是M的第三行，等等</td></tr></tbody></table></div><h5 id="02-常用几何函数"><a href="#02-常用几何函数" class="headerlink" title="02. 常用几何函数"></a>02. 常用几何函数</h5><div class="table-container"><table><thead><tr><th>函数</th><th>功能描述 </th></tr></thead><tbody><tr><td>distance(pt1, pt2)</td><td>两点之间的欧几里德距离（Euclidean distance）</td></tr><tr><td>faceforward(N,I,Ng)</td><td>如果Ng∙I&lt;0，返回N；否则返回-N。</td></tr><tr><td>length(v)</td><td>返回一个向量的模(长度)，即sqrt(dot(v,v))</td></tr><tr><td>normalize(v)</td><td>返回v向量的单位向量</td></tr><tr><td>reflect(I, N)</td><td>根据入射光纤方向I和表面法向量N计算反射向量，仅对三元向量有效</td></tr><tr><td>refract(I,N,eta)</td><td>根据入射光线方向I，表面法向量N和折射相对系数eta,计算折射向量。如果对给定的eta,I和N之间的角度太大，返回(0,0,0)。只对三元向量有效</td></tr></tbody></table></div><h5 id="03-常用纹理映射函数"><a href="#03-常用纹理映射函数" class="headerlink" title="03. 常用纹理映射函数"></a>03. 常用纹理映射函数</h5><div class="table-container"><table><thead><tr><th>函数</th><th>功能描述 </th></tr></thead><tbody><tr><td>tex1D(sampler1D tex, float s)</td><td>一维纹理查询</td></tr><tr><td>tex1D(sampler1D tex, float s, float dsdx, float dsdy)</td><td>使用导数值（derivatives）查询一维纹理</td></tr><tr><td>Tex1D(sampler1D tex, float2 sz)</td><td>一维纹理查询，并进行深度值比较</td></tr><tr><td>Tex1D(sampler1D tex, float2 sz, float dsdx,float dsdy)</td><td>使用导数值（derivatives）查询一维纹理， 并进行深度值比较</td></tr><tr><td>Tex1Dproj(sampler1D tex, float2 sq)</td><td>一维投影纹理查询</td></tr><tr><td>Tex1Dproj(sampler1D tex, float3 szq)</td><td>一维投影纹理查询，并比较深度值</td></tr><tr><td>Tex2D(sampler2D tex, float2 s)</td><td>二维纹理查询</td></tr><tr><td>Tex2D(sampler2D tex, float2 s, float2 dsdx, float2 dsdy)</td><td>使用导数值（derivatives）查询二维纹理</td></tr><tr><td>Tex2D(sampler2D tex, float3 sz)</td><td>二维纹理查询，并进行深度值比较</td></tr><tr><td>Tex2D(sampler2D tex, float3 sz, float2 dsdx,float2 dsdy)</td><td>使用导数值（derivatives）查询二维纹理，并进行深度值比较</td></tr><tr><td>Tex2Dproj(sampler2D tex, float3 sq)</td><td>二维投影纹理查询</td></tr><tr><td>Tex2Dproj(sampler2D tex, float4 szq)</td><td>二维投影纹理查询，并进行深度值比较</td></tr><tr><td>texRECT(samplerRECT tex, float2 s)</td><td>二维非投影矩形纹理查询（OpenGL独有）</td></tr><tr><td>texRECT (samplerRECT tex, float3 sz, float2 dsdx,float2 dsdy)</td><td>二维非投影使用导数的矩形纹理查询（OpenGL独有）</td></tr><tr><td>texRECT (samplerRECT tex, float3 sz)</td><td>二维非投影深度比较矩形纹理查询（OpenGL独有）</td></tr><tr><td>texRECT (samplerRECT tex, float3 sz, float2 dsdx,float2 dsdy)</td><td>二维非投影深度比较并使用导数的矩形纹理查询（OpenGL独有）</td></tr><tr><td>texRECT proj(samplerRECT tex, float3 sq)</td><td>二维投影矩形纹理查询（OpenGL独有）</td></tr><tr><td>texRECT proj(samplerRECT tex, float3 szq)</td><td>二维投影矩形纹理深度比较查询（OpenGL独有）</td></tr><tr><td>Tex3D(sampler3D tex, float s)</td><td>三维纹理查询</td></tr><tr><td>Tex3D(sampler3D tex, float3 s, float3 dsdx, float3 dsdy)</td><td>结合导数值（derivatives）查询三维纹理</td></tr><tr><td>Tex3Dproj(sampler3D tex, float4 szq)</td><td>查询三维投影纹理，并进行深度值比较</td></tr><tr><td>texCUBE(samplerCUBE tex, float3 s)</td><td>查询立方体纹理</td></tr><tr><td>texCUBE (samplerCUBE tex, float3 s, float3 dsdx, float3 dsdy)</td><td>结合导数值（derivatives）查询立方体纹理</td></tr><tr><td>texCUBEproj (samplerCUBE tex, float4 sq)</td><td>查询投影立方体纹理</td></tr></tbody></table></div><h5 id="在这个表中，每个函数第二个参数的名字指明了在执行纹理查询的时候，它的值是如果被使用的"><a href="#在这个表中，每个函数第二个参数的名字指明了在执行纹理查询的时候，它的值是如果被使用的" class="headerlink" title="在这个表中，每个函数第二个参数的名字指明了在执行纹理查询的时候，它的值是如果被使用的:"></a>在这个表中，每个函数第二个参数的名字指明了在执行纹理查询的时候，它的值是如果被使用的:</h5><blockquote><p>s表示这是一个一元、二元或三元纹理坐标。<br>z表示这是一个用来进行阴影贴图查找的深度比较值。<br>q表示这是一个透视值，在进行纹理查找之前，它被用来除以纹理坐标（s）。<br>当你使用的纹理函数允许你指定一个深度比较值的时候，与之相关联的纹理单元必须被设置成深度比较纹理。否则，深度比较实际上不会被执行。 </p></blockquote><h5 id="04-偏导函数"><a href="#04-偏导函数" class="headerlink" title="04. 偏导函数"></a>04. 偏导函数</h5><div class="table-container"><table><thead><tr><th>函数</th><th>功能描述 </th></tr></thead><tbody><tr><td>ddx(a)</td><td>近似a关于屏幕空间x轴的偏导数</td></tr><tr><td>ddy(a)</td><td>近似a关于屏幕空间y轴的偏导数</td></tr></tbody></table></div><h5 id="05-调试函数"><a href="#05-调试函数" class="headerlink" title="05. 调试函数"></a>05. 调试函数</h5><div class="table-container"><table><thead><tr><th>函数</th><th>功能描述 </th></tr></thead><tbody><tr><td>void debug(float4 x)</td><td>如果在编译时设置了DEBUG，片段着色程序中调用该函数可以将值x作为COLOR语义的最终输出；否则该函数什么也不做。</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> unity </category>
          
          <category> Shader </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>怎样的游戏可以使人沉迷</title>
      <link href="/2022/03/26/%E6%80%8E%E6%A0%B7%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8F%AF%E4%BB%A5%E4%BD%BF%E4%BA%BA%E6%B2%89%E8%BF%B7/"/>
      <url>/2022/03/26/%E6%80%8E%E6%A0%B7%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8F%AF%E4%BB%A5%E4%BD%BF%E4%BA%BA%E6%B2%89%E8%BF%B7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.daly.top/">我的博客</a> 查看</p><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>不知道大家有没有遇到这样一种情况，就是不论在周末还是放假，只要打开王者荣耀时间就过得特别的快，但是你想好好沉下身子来学习时间就过得特别的慢，并且特别的煎熬;不瞒你们说我也曾经遇到过这种现象，为什么同样做一件事情，在时间体验上会有如此大的差别呢！如果我们可以恰当的把游戏上瘾的机制合理的用到学习生活中，那是不是可以考上清华北大呢！</p><ul><li><h5 id="怎样的游戏机制使人沉迷"><a href="#怎样的游戏机制使人沉迷" class="headerlink" title="怎样的游戏机制使人沉迷"></a>怎样的游戏机制使人沉迷</h5><img src="https://img-blog.csdnimg.cn/c27920a4b0ca404d895473a7bb03a5f5.png" alt="心流" title="心流"><br>首先了解一个心理学概念叫做心流,心流是指我们在做某些事情时,那种全神贯注、投入忘我的状态，在这种状态下，你甚至感受不到时间的流逝，在完成这件事之后我们有一种充满能量的并且非常满足的感受。所以我们不难发现，游戏之所以能让我们沉迷其中，恰好就是因为它可以让玩家不断产生心流，那么问题来了，游戏是怎样做到的呢？为什么我们在学习的时候就不能产生心流呢！实际上想要产生心流有必不可少的三个阶段，分别是目标、挑战、反馈;所谓目标也就是我们对于一件事件的预期,举个例子，对于一局英雄联盟来说，我的游戏目标就是击杀敌人、 推掉敌方的水晶，对于吃鸡游戏来说我们的目标就是最终存活成功吃鸡，而我们对游戏中的目标产生兴趣、向往的时候呢，你就已经落入了套路的第一步，因为此时你的注意力已经被吸引了，当目标明确之后，游戏中设计的机制自然会想你发起挑战，当然这个挑战的难度必须恰到好处，如果游戏太难的话，会使人感到焦虑，而游戏挑战过于简单，则会让人感到无聊。而这也是你能沉迷于游戏最为关键的一步，假如说你的段位是铂金，在你打游戏的时候，对面匹配到的一直都是职业选手，或者是青铜，那你将毫无游戏体验，也不会对这个游戏产生兴趣<br>，所以说游戏的匹配机制恰好能够给玩家匹配实力相当的对手进行对战，来制造出恰到好处的挑战，而最后的环节也就是产生心流的直接因素，<br>就是反馈，什么叫反馈呢，比如说你在游戏中击杀了炮车兵之后增加的金币，以及击杀敌方英雄是播报的五连杀音效和游戏胜利得到的一些奖励、经验都是反馈，而恰恰是这些持续不断的反馈，可以刺激你的肾上腺素的分泌，诱惑你大脑多巴胺的产生,这里所说的多巴胺就是一种可以传输快乐和兴奋的神经传导物质。持续的多巴胺分泌可以让你获得无比多的快乐感和满足感，从而产生心流，此时想把这种状态持续下去，所以你就开始了所谓的“最后亿把”，而这就是所谓的游戏沉迷。</li></ul><p><img src="https://img-blog.csdnimg.cn/8486c42c6763415786cd7452cee4812c.png" alt="学习" title="学习"></p><p>我们不妨抛开游戏的外衣，重新审视一下这三个环节，不难发现，他们在同样可以使用在别的事情上，那么我们想把这种机制用到学习当中，我们应该怎么去做呢？实际上我们在学习上要用到这一套机制并不复杂，我们要从目标开始说起，在进行的一段学习之前，我们一定要建立学习的目标，注意这里的目标不是考清华北大的大目标，而是能够在短时间内可以完成的小目标，比如我们做完一本练习册、今天记多少个单词，那么接下来就是对于挑战和反馈的机制的使用了，我们先想一下，如果游戏中机制是你需要上了王者段位，才会把所有的奖励发给你，那么你还会继续玩下去吗? 所以我们在学习中一定要每天给一个小挑战，在实现之后，给自己相应的奖励，例如，这一套题我达到了达到了多少分，就给自己吃一个冰激凌，这样的设定可以让你在短周期内获得持续的反馈，就像游戏中每杀掉一个敌人获得一些奖励是一个道理。好了这期内容到此结束，如果觉得以上内容对已有帮助，这你关注走一波。</p>]]></content>
      
      
      <categories>
          
          <category> 理论知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo  Tag Plugins Plus 插件</title>
      <link href="/2022/03/21/Hexo-Tag-Plugins-Plus-%E6%8F%92%E4%BB%B6/"/>
      <url>/2022/03/21/Hexo-Tag-Plugins-Plus-%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.daly.top/" title="我的博客地址">我的博客</a>查看。</p><h3 id="行内文本"><a href="#行内文本" class="headerlink" title="行内文本"></a>行内文本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line">2. 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line">3. 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line">4. 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line">5. 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line">6. 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><h3 id="段落文本"><a href="#段落文本" class="headerlink" title="段落文本"></a>段落文本</h3><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<span class='p center logo large'>Volantis</span><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><h3 id="引用-note"><a href="#引用-note" class="headerlink" title="引用 note"></a>引用 note</h3><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><h3 id="上标标签-tip"><a href="#上标标签-tip" class="headerlink" title="上标标签 tip"></a>上标标签 tip</h3><div class="tip "><p>默认情况</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><h3 id="动态标签-anima"><a href="#动态标签-anima" class="headerlink" title="动态标签 anima"></a>动态标签 anima</h3><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div><div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div><div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div><div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><h3 id="复选列表-checkbox"><a href="#复选列表-checkbox" class="headerlink" title="复选列表 checkbox"></a>复选列表 checkbox</h3><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><h3 id="单选列表-radio"><a href="#单选列表-radio" class="headerlink" title="单选列表 radio"></a>单选列表 radio</h3><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><h3 id="时间轴-timeline"><a href="#时间轴-timeline" class="headerlink" title="时间轴 timeline"></a>时间轴 timeline</h3><div class="timeline "></div><h3 id="链接卡片-link"><a href="#链接卡片-link" class="headerlink" title="链接卡片 link"></a>链接卡片 link</h3><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><h3 id="github-卡片-ghcard"><a href="#github-卡片-ghcard" class="headerlink" title="github 卡片 ghcard"></a>github 卡片 ghcard</h3><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><h3 id="github-徽标-ghbdage"><a href="#github-徽标-ghbdage" class="headerlink" title="github 徽标 ghbdage"></a>github 徽标 ghbdage</h3><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><p>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object></p><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object><p>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object></p><h3 id="网站卡片-sites"><a href="#网站卡片-sites" class="headerlink" title="网站卡片 sites"></a>网站卡片 sites</h3><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object><p>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object></p><h3 id="行内图片-inlineimage"><a href="#行内图片-inlineimage" class="headerlink" title="行内图片 inlineimage"></a>行内图片 inlineimage</h3><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><h3 id="音频-audio"><a href="#音频-audio" class="headerlink" title="音频 audio"></a>音频 audio</h3><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><h3 id="视频-video"><a href="#视频-video" class="headerlink" title="视频 video"></a>视频 video</h3><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><h3 id="相册-gallery"><a href="#相册-gallery" class="headerlink" title="相册 gallery"></a>相册 gallery</h3><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://npm.elemecdn.com/akilar-candyassets/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>  </div><h3 id="折叠筐"><a href="#折叠筐" class="headerlink" title="折叠筐"></a>折叠筐</h3><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><h3 id="分栏-tab"><a href="#分栏-tab" class="headerlink" title="分栏 tab"></a>分栏 tab</h3><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="诗词标签-poem"><a href="#诗词标签-poem" class="headerlink" title="诗词标签 poem"></a>诗词标签 poem</h3><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><h3 id="阿里图标-icon"><a href="#阿里图标-icon" class="headerlink" title="阿里图标 icon"></a>阿里图标 icon</h3><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg><h3 id="特效标签-wow"><a href="#特效标签-wow" class="headerlink" title="特效标签 wow"></a>特效标签 wow</h3><div class='wow animate__flip' data-wow-duration='' data-wow-delay='' data-wow-offset=''  data-wow-iteration='' ><div class="note green icon modern"><i class="note-icon fas fa-fan"></i><p><code>flip</code>动画效果。</p></div></div><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange icon modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><div class="note red icon modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div><h3 id="进度条-progress"><a href="#进度条-progress" class="headerlink" title="进度条 progress"></a>进度条 progress</h3><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><h3 id="注释-notation"><a href="#注释-notation" class="headerlink" title="注释 notation"></a>注释 notation</h3><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span><h3 id="旋转相册-carousel"><a href="#旋转相册-carousel" class="headerlink" title="旋转相册 carousel"></a>旋转相册 carousel</h3><div id='SF' class='carousel'><div id="SF-drag-container" class="drag-container"><div id="SF-spin-container" class="spin-container"><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110444226.png" alt=""><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110508327.png" alt=""><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110525753.png" alt=""><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110600751.png" alt=""><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110621554.png" alt=""><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110637459.png" alt=""><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110654150.png" alt=""><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110707916.png" alt=""><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110719787.png" alt=""><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110731118.png" alt=""><p>strike freedom</p></div><div id="SF-carousel-ground" class="carousel-ground"></div></div></div><script type="text/javascript">carouselinit('SF');</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ToolsShare</title>
      <link href="/2021/06/02/ToolsShare/"/>
      <url>/2021/06/02/ToolsShare/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.daly.top/" title="我的博客地址">我的博客</a>查看。</p><p><img src="https://img-blog.csdnimg.cn/d9208a0f0c2c4f70a2cf6afddbbdafbb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>大家好，我是遇见。这期和大家分享一些常用的软件、资源以及教程。红色标题的强烈推荐，个人认为属于神器级别！  </p><h2 id="一、-软件篇"><a href="#一、-软件篇" class="headerlink" title="一、 软件篇"></a>一、 软件篇</h2><h3 id="1-Q-Dir多窗口文件管理器"><a href="#1-Q-Dir多窗口文件管理器" class="headerlink" title=" 1. Q-Dir多窗口文件管理器 "></a><Font color=red > 1. Q-Dir多窗口文件管理器 </Font></h3><hr><p>Q-Dir 是一款强大且走极端路线的文件管理器，它最多同时提供四个文件夹整理窗口，特别适合用户频繁在各个文件夹中跳转进行复制粘贴的文件归档操作。</p><p><a href="http://www.softwareok.com/?seite=Freeware/Q-Dir" title=" Q-Dir下载地址">下载地址</a>查看。</p><p><img src="https://img-blog.csdnimg.cn/f850f976acee4cb68f0fa719ec8d1d16.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h3 id="2-Listary：-文件搜索。"><a href="#2-Listary：-文件搜索。" class="headerlink" title="2. Listary： 文件搜索。"></a>2. Listary： 文件搜索。</h3><hr><p>QListary是一个革命性的搜索工具。 有了Listary，你就再也不必经历浏览文件夹、查找正确文件名和在有限的菜单中搜索的繁琐过程了。</p><p>可以通过关键字快速搜索你想要的文件、打开指定网页，快速启动应用程序等功能，功能太多了这里就不详细说了，有兴趣的可以自己探索探索。</p><p><a href="https://www.listary.com/" title="Listary：下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/c878af02d7ce4fbdb6ce35eab9f0a3c9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h3 id="3-Everything-文件搜索。"><a href="#3-Everything-文件搜索。" class="headerlink" title=" 3. Everything: 文件搜索。 "></a><Font color=red > 3. Everything: 文件搜索。 </Font></h3><hr><p>Everything 和 Listary类似，是一个搜索工具。 是一款独立的搜索软件存在，功能上非常强大。而Listary定位则是一个辅助型的检索工具，检索性能上两者区别不大。</p><p>优点：快速文件索引，体积小，干净简洁的用户界面，支持正则表达式。</p><p>相比Listary各有各的优势，自己衡量选择。</p><p><a href="https://www.voidtools.com/zh-cn/" title="Everything：下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/13d550cb164a488493a7f02203105bd2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h3 id="4-PotPlayer-看片神器。"><a href="#4-PotPlayer-看片神器。" class="headerlink" title="4. PotPlayer: 看片神器。"></a>4. PotPlayer: 看片神器。</h3><hr><p>PotPlayer 一款非常优秀的播放器，界面简洁，安装包小，无广告，启动迅速、功耗低、解码能力强大</p><p><a href="http://www.potplayer.org/" title="Potplayer：下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/6e327724a9c44da69c9365a9b8bfc46d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h3 id="5-Bandican-录屏神器。"><a href="#5-Bandican-录屏神器。" class="headerlink" title="5. Bandican: 录屏神器。"></a>5. Bandican: 录屏神器。</h3><hr><p>用 Bandicam 可以进行什么？</p><ul><li>录制电脑屏幕：电脑桌面、资源管理器、因特网浏览器、谷歌浏览器、火狐浏览器等。 </li><li>游戏录像：穿越火线、魔兽世界、地下城与勇士、QQ飞车、绝地求生、命召唤OL等。</li><li>网站页面：百度、微博、雅虎、各种博客、社区网站等。 </li><li>视频网站：腾讯视频、优酷视频、直播视频、视频互动网站等。</li><li>Windows应用程序：PPT（PowerPoint）、PS（Photoshop）、Excel、QQ视频聊天、摄像头等。</li><li>视频播放软件：迅雷影音、百度影音、Windows自带Media Player、iTunes等。</li></ul><p><a href="https://www.bandicam.cn/downloads/" title="Bandican：下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/679bcbd00f1744b39c571a3b1a4c1102.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h2 id="6-Snipaste-截屏神器"><a href="#6-Snipaste-截屏神器" class="headerlink" title="6. Snipaste: 截屏神器"></a>6. Snipaste: 截屏神器</h2><hr><p>Snipaste 一个简单而强大的截屏神器，还可以将截图固定在屏幕上。</p><p>世界上最好的截屏工具！谁用谁知道！</p><p>PS：配合 win10 自带的粘贴板功能有奇效哦！快捷键：win + v</p><p><a href="https://www.snipaste.com/#/" title="Snipaste：下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/61858a4098d84968ae13d21b6ae127c7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h2 id="7-ScreenToGif-gif制作工具"><a href="#7-ScreenToGif-gif制作工具" class="headerlink" title="7. ScreenToGif: gif制作工具"></a>7. ScreenToGif: gif制作工具</h2><hr><p>屏幕，摄像头和白板录像机与集成编辑器，可以通过录制不仅可以制作GIF，还可以制作视频等等。</p><p><a href="https://www.screentogif.com/?l=zh_cn" title="ScreenToGif：下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/7ac1b4d0b83e4d199e2208a4aab486ba.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h2 id="8-ReNamer-批量重命名工具"><a href="#8-ReNamer-批量重命名工具" class="headerlink" title="8. ReNamer: 批量重命名工具"></a>8. ReNamer: 批量重命名工具</h2><hr><p>简洁而强大的批量重命名工具。</p><p><a href="https://renamer.en.softonic.com/download" title="ReNamer：下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/3f2b8f8c18824893a5e758aee5bcd3a3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h2 id="9-Image-Tuner-图片批处理工具"><a href="#9-Image-Tuner-图片批处理工具" class="headerlink" title="9. Image Tuner: 图片批处理工具"></a>9. Image Tuner: 图片批处理工具</h2><hr><p>简洁而强大的图片批处理工具。批量调整大小、添加水印、转换格式等等多功能软件。</p><p><a href="https://www.glorylogic.com/image-tuner.html" title="Image tuner：下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/103d014e584f4b36b635f10ce6169c44.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h2 id="10-WGestures-全局鼠标手势"><a href="#10-WGestures-全局鼠标手势" class="headerlink" title="10. WGestures: 全局鼠标手势"></a>10. WGestures: 全局鼠标手势</h2><hr><p>一个更简单、更现代的鼠标手势。免费 &amp; 开源。 停止浪费时间在琐碎操作上！WGestures让用户跳过琐碎细节，专注于重要的事物。</p><p><a href="http://www.yingdev.com/projects/wgestures" title="WGestures：下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/94fc95c65bc24a99a859df93cf3a1d60.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h2 id="11-PandaOCR-多功能OCR识别-翻译-朗读-弹窗"><a href="#11-PandaOCR-多功能OCR识别-翻译-朗读-弹窗" class="headerlink" title=" 11. PandaOCR: 多功能OCR识别+翻译+朗读+弹窗 "></a><Font color=red > 11. PandaOCR: 多功能OCR识别+翻译+朗读+弹窗 </Font></h2><hr><ul><li>支持识别引擎：搜狗OCR/API+腾讯OCR/API+百度OCR/API+有道OCR/API+京东OCR</li><li>支持翻译引擎：搜狗翻译/API+腾讯翻译/API+百度翻译/API+有道翻译/API+谷歌翻译+词霸翻译</li><li>支持朗读引擎：搜狗朗读+腾讯朗读+百度朗读+必应朗读+讯飞朗读+谷歌朗读+京东朗读</li><li>支持快捷键和屏幕边角触发截图识别功能，方便快速</li><li>支持截取识别固定区域，例如可帮助翻译英文游戏/软件中的单词或队友聊天记录</li><li>支持右侧小弹窗显示信息，方便快速查看识别/翻译内容</li><li>支持智能合并修正识别/翻译文本，让排版更合理</li><li>支持设置最多十条固定截图规则，让一键识别更方便快捷</li><li>支持监听图像和文本复制操作，快速识别图像文本或翻译复制文本</li><li>支持简单的窗口汉化功能，帮助翻译纯英文类软件界面文字 还有很多奇怪的没有列在程序界面上的功能，可以编辑程序目录下的CONFIG.INI文件试试</li></ul><p><a href="https://www.52pojie.cn/thread-919023-1-1.html" title="Snipaste：下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/fed42527ea5e427981aa73a78e7144b9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/4ba66ab3999045538349fdf8768ac329.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h2 id="12-Anki-记忆神器"><a href="#12-Anki-记忆神器" class="headerlink" title=" 12. Anki: 记忆神器 "></a><Font color=red > 12. Anki: 记忆神器 </Font></h2><hr><p>Anki 一款记忆神器软件，它使记忆变得更加容易, 它可以一个自定义多功能的记忆方式, 减少学习时间,提升你的学习容量, 提高学习效率。不论你是学生还是正在工作中的，不论任何专业，任何职业，只要你想学习，想更有效率的记忆，这个软件值得你拥有！！！！</p><p>Anki 通过算法，它可以在相对合适的时间来告诉你复习什么比较好，充分利用好你的时间。</p><p>支持Windows Mac Linux iPhone Android（ps：ios的是收费软件，个人认为这款软件值得）</p><p><a href="https://apps.ankiweb.net/" title=" Anki：软件下载地址">软件下载地址</a>查看。<a href="https://ankiweb.net/shared/decks/chinese" title=" Anki：卡片下载地址">卡片下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/45457b6b88494de3b24c20443c9e5db5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_14,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/d6935f70bf744dd5a21994560c4df015.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_14,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h2 id="13-Jpg-FileBinder-把文件隐藏到图片中"><a href="#13-Jpg-FileBinder-把文件隐藏到图片中" class="headerlink" title="13. Jpg+FileBinder: 把文件隐藏到图片中"></a>13. Jpg+FileBinder: 把文件隐藏到图片中</h2><hr><p>这个工具好不好，因人而异吧，可以把自己的一些文件存储到对应的图片中，使其更形象化。 还阔以隐藏小电影哟！！你懂得 <em>^▽^</em></p><p>注意：打开图片文件的时候用解压工具打开，即可得到里面隐藏的文件。</p><p><a href="https://www.softpedia.com/get/Security/Security-Related/Jpg-FileBinder.shtml" title=" Jpg+FileBinder：下载地址">下载地址</a>查看。      <img src="https://img-blog.csdnimg.cn/ca61e61cd1b3486f8512591e31f82040.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h2 id="15-Geek-Uninstaller-极速卸载工具"><a href="#15-Geek-Uninstaller-极速卸载工具" class="headerlink" title="15. Geek Uninstaller: 极速卸载工具"></a>15. Geek Uninstaller: 极速卸载工具</h2><hr><p>简洁、轻便、快速、干净的一款卸载工具，还支持windows store app。</p><p><a href="https://geekuninstaller.com/" title=" Geek Uninstaller:下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/1501252acc13454b96ae6a666e2a5636.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_16,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h2 id="17-TextureUnpacker-一个基于Unity的图集解析工具"><a href="#17-TextureUnpacker-一个基于Unity的图集解析工具" class="headerlink" title="17. TextureUnpacker:一个基于Unity的图集解析工具"></a>17. TextureUnpacker:一个基于Unity的图集解析工具</h2><hr><p>一个基于Unity的用于拆解texturepacker打出来的图集的工具，适合游戏开发者使用。</p><p><a href="https://blog.csdn.net/qq_28299311/article/details/103289299" title=" TextureUnpacker：下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/57816f7931054b9f83e02c2318ed460f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5YuH5pWi55qE5biG,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><hr><h2 id="二、-工具篇"><a href="#二、-工具篇" class="headerlink" title="二、 工具篇"></a>二、 工具篇</h2><h3 id="Shader-建模工具。"><a href="#Shader-建模工具。" class="headerlink" title="Shader 建模工具。"></a>Shader 建模工具。</h3><hr><p><a href="http://www.iquilezles.org/apps/graphtoy/" title="Shader 建模工具: 下载地址">下载地址</a>查看。</p><p><img src="https://img-blog.csdnimg.cn/def73c7c3e0c46be97582b9b322dd795.png" alt="请添加图片描述"></p><h3 id="2D-图形函数绘制工具。"><a href="#2D-图形函数绘制工具。" class="headerlink" title="2D 图形函数绘制工具。"></a>2D 图形函数绘制工具。</h3><hr><p><a href="https://www.desmos.com/calculator" title="2D 图形函数绘制工具: 下载地址">下载地址</a>查看。</p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://img-blog.csdnimg.cn/3eb4edccb6614d11ae3a9da46efe5876.png" alt="请添加图片描述"></h2><h3 id="3D-图形函数绘制工具。"><a href="#3D-图形函数绘制工具。" class="headerlink" title="3D 图形函数绘制工具。"></a>3D 图形函数绘制工具。</h3><hr><p><strong>3D 图形函数绘制工具</strong> 只是这里的一部分，里面还包括物理、地理等模拟工具。<a href="https://www.desmos.com/calculator" title="2D 图形函数绘制工具: 下载地址">下载地址</a>查看。<img src="https://img-blog.csdnimg.cn/43759de77bbc4c3f892a9b931f8ab10e.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/5e1545157cc644f88b8746c2f38732f7.png" alt="请添加图片描述"></p><h3 id="图形计算器-GeoGebra。"><a href="#图形计算器-GeoGebra。" class="headerlink" title="图形计算器 - GeoGebra。"></a>图形计算器 - GeoGebra。</h3><hr><p><a href="https://www.geogebra.org/graphing" title="图形计算器 - GeoGebra: 下载地址">下载地址</a>查看。</p><p><img src="https://img-blog.csdnimg.cn/228e9d73988d40d78bd603f997d6f089.png" alt="请添加图片描述"></p><h3 id="在线编辑图片。"><a href="#在线编辑图片。" class="headerlink" title="在线编辑图片。"></a>在线编辑图片。</h3><hr><p><a href="https://www.iloveimg.com/zh-cn" title="在线编辑图片: 下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/1d933ae6141346f0ad4a7e4989fed687.png" alt="请添加图片描述"></p><h3 id="在线视频剪辑。"><a href="#在线视频剪辑。" class="headerlink" title="在线视频剪辑。"></a>在线视频剪辑。</h3><hr><p><a href="https://beecut.cn/online-video-editor" title="在线视频剪辑: 下载地址">下载地址</a>查看。</p><p><img src="https://img-blog.csdnimg.cn/a13fcb2fe9984b95b15b2e5d9ef18574.png" alt="请添加图片描述"></p><h3 id="PDF、World、Excel各类工具。"><a href="#PDF、World、Excel各类工具。" class="headerlink" title="PDF、World、Excel各类工具。"></a>PDF、World、Excel各类工具。</h3><hr><p><a href="https://www.ilovepdf.com/" title="PDF、World、Excel各类工具: 下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/107430984f0a414cb995f0db35977363.png" alt="请添加图片描述"></p><h3 id="一键生成所有尺寸的应用图标-启动图。"><a href="#一键生成所有尺寸的应用图标-启动图。" class="headerlink" title="一键生成所有尺寸的应用图标/启动图。"></a>一键生成所有尺寸的应用图标/启动图。</h3><hr><p><a href="https://icon.wuruihong.com/" title="一键生成所有尺寸的应用图标/启动图: 下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/060974c9c31244728020ce0167c5edc3.png" alt="请添加图片描述"></p><h3 id="在线编辑音频文件。"><a href="#在线编辑音频文件。" class="headerlink" title="在线编辑音频文件。"></a>在线编辑音频文件。</h3><hr><p><a href="https://mp3cut.net/" title="在线编辑音频文件: 下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/b4c2c361db6949aeb7f323faa4f1372b.png" alt="请添加图片描述"></p><h3 id="在线制作图表。"><a href="#在线制作图表。" class="headerlink" title="在线制作图表。"></a>在线制作图表。</h3><hr><p><a href="https://tushuo.baidu.com/#/gallery" title="在线制作图表: 下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/89de23d218fa4cae9d26dab7f2945755.png" alt="请添加图片描述"></p><h3 id="Bigjpg-：AI人工智能图片无损放大。"><a href="#Bigjpg-：AI人工智能图片无损放大。" class="headerlink" title="Bigjpg ：AI人工智能图片无损放大。"></a>Bigjpg ：AI人工智能图片无损放大。</h3><hr><p><a href="https://bigjpg.com/" title="Bigjpg: 下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/2c9b33c8b7e84b6d86ba202af86ed6a1.png" alt="请添加图片描述"></p><h3 id="tinypng-：无损压缩图片。"><a href="#tinypng-：无损压缩图片。" class="headerlink" title="tinypng ：无损压缩图片。"></a>tinypng ：无损压缩图片。</h3><hr><p><a href="https://tinypng.com/" title="tinypng : 下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/1caf294bec664ec28848dba205c6cf4e.png" alt="请添加图片描述"></p><h3 id="GitMind-在线脑图制作。"><a href="#GitMind-在线脑图制作。" class="headerlink" title="GitMind: 在线脑图制作。"></a>GitMind: 在线脑图制作。</h3><hr><p><a href="https://app.gitmind.cn/my" title="GitMind: 下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/10d10c459bb944a78628e8bcccaae863.png" alt="请添加图片描述"></p><h3 id="有道云笔记。"><a href="#有道云笔记。" class="headerlink" title="有道云笔记。"></a>有道云笔记。</h3><hr><p><a href="https://note.youdao.com/" title="有道云笔记: 下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/d3ccf2e2626842a2a673c22877dbbd6d.png" alt="请添加图片描述"></p><h3 id="在线免费PNG-转换ICon-格式。"><a href="#在线免费PNG-转换ICon-格式。" class="headerlink" title="在线免费PNG 转换ICon 格式。"></a>在线免费PNG 转换ICon 格式。</h3><hr><p>一个免费的转换器。可以把你的PNG文件（也支持其他图片格式）转换成Windows ICO图标格式。<br>主要用途是在steam平台宣发时，客户端图片必须含一张32<em>32的图像，而我们的游戏图片64</em>64，所以导致游戏图表模糊看不清。目前我这边处理方案有两种： 1. 把Icon做成矢量图；2.用这个在线转换器，转成多张不一样尺寸；<br><a href="https://png2icojs.com/zh/" title="有道云笔记: 下载地址">下载地址</a>查看。<br><img src="https://img-blog.csdnimg.cn/fa126696ad664f62ba0dd321b70e82f0.png" alt="请添加图片描述"></p><blockquote><p>关注我不迷路，后续更新更多精彩内容。。。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity 中实现擦除功能</title>
      <link href="/2021/03/03/Unity-%E4%B8%AD%E5%AE%9E%E7%8E%B0%E6%93%A6%E9%99%A4%E5%8A%9F%E8%83%BD/"/>
      <url>/2021/03/03/Unity-%E4%B8%AD%E5%AE%9E%E7%8E%B0%E6%93%A6%E9%99%A4%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.daly.top/">个人博客</a>查看。<br><a href="https://www.cnblogs.com/hont/p/9977401.html/" title="通过一个小Trick实现shader的像素识别/统计操作">原文</a>查看。</p><p><a href="https://cdn.jsdelivr.net/gh/Yuxushen/CDN/blog/uiSlide.jpg"><img src="https://img-blog.csdnimg.cn/img_convert/ebe29138f2a80b55805f4632c1e4703f.png" alt=""></a></p><hr><h3 id="通过一个小Trick实现shader的像素识别-统计操"><a href="#通过一个小Trick实现shader的像素识别-统计操" class="headerlink" title="通过一个小Trick实现shader的像素识别/统计操"></a>通过一个小Trick实现shader的像素识别/统计操</h3><h4 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h4><p>将一张大图分成多个小块逐步处理并逐步合并，保留关键像素的向下采样：</p><p>   <a href="https://cdn.jsdelivr.net/gh/Yuxushen/CDN/blog/uiSlide.jpg"><img src="https://img-blog.csdnimg.cn/img_convert/66100b2e59705240c24f8694c0957189.png" alt=""></a></p><p>但我在思考一种更简便的方法，于是想到在顶点shader里做判断检测，在像素shader里获取结果这样一个形式： </p><p><a href="https://cdn.jsdelivr.net/gh/Yuxushen/CDN/blog/uiSlide.jpg"><img src="https://img-blog.csdnimg.cn/img_convert/93d7c568b48f8ce1fba5d5d5fc2126ee.png" alt=""></a></p><p>用一组顶点去读单个像素，判断失败的顶点坐标提交到屏幕外，而判断成功的顶点坐标放在屏幕内。</p><p>最后在CPU中获取是否有屏幕内顶点这样一个结果，来进行简单的识别操作。</p><p>而在开启透明之后，还可以用透明度叠加来获取更复杂的结果。</p><h4 id="2-实践"><a href="#2-实践" class="headerlink" title="2.实践"></a>2.实践</h4><p>首先实践结果并没有想象的那么好，因为如果纯用三角面来做顶点部分的判断未免太费效率了。</p><p>所以我改成了传入顶点判断并生成面的方式，并且缩小了传入图片的像素大小。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Graphics.DrawProcedural(MeshTopology.Points, blueTex.width * blueTex.height, 1);</span><br></pre></td></tr></table></figure><p>毕竟更多的运用场合是用来做刮刮卡或者擦除的识别。只需要检测mask图片。</p><p>上代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">Shader &quot;Hidden/FooShader&quot;</span><br><span class="line">&#123;</span><br><span class="line">    Properties</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    SubShader</span><br><span class="line">    &#123;</span><br><span class="line">        Blend One One</span><br><span class="line"></span><br><span class="line">        tags</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;Queue&quot; = &quot;Transparent&quot;</span><br><span class="line">            &quot;RenderType&quot; = &quot;Transparent&quot;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Pass</span><br><span class="line">        &#123;</span><br><span class="line">            CGPROGRAM</span><br><span class="line">            #pragma target 4.0</span><br><span class="line">            #pragma vertex vert</span><br><span class="line">            #pragma geometry geom</span><br><span class="line">            #pragma fragment frag</span><br><span class="line"></span><br><span class="line">            #include &quot;UnityCG.cginc&quot;</span><br><span class="line"></span><br><span class="line">            struct v2f</span><br><span class="line">            &#123;</span><br><span class="line">                float4 color : COLOR;</span><br><span class="line">                float4 vertex : SV_POSITION;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            sampler2D _Image;</span><br><span class="line">            float4 _ImageSize;</span><br><span class="line"></span><br><span class="line">            v2f vert(uint vid : SV_VertexID)</span><br><span class="line">            &#123;</span><br><span class="line">                v2f o = (v2f)0;</span><br><span class="line"></span><br><span class="line">                half y = floor(vid / _ImageSize.x);</span><br><span class="line">                half x = (vid - y * _ImageSize.x) / _ImageSize.x;</span><br><span class="line">                y = y / _ImageSize.y;</span><br><span class="line"></span><br><span class="line">                o.vertex = 0;</span><br><span class="line"></span><br><span class="line">                float4 image_col = tex2Dlod(_Image, half4(x,y,0,0));</span><br><span class="line"></span><br><span class="line">                if (all(image_col.rgb == half3(0, 0, 1)))</span><br><span class="line">                //if (all(image_col.rgb == half3(0, 1, 1)))    /*error*/</span><br><span class="line">                &#123;</span><br><span class="line">                    o.color = 1;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    o.color = 0;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                return o;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            [maxvertexcount(4)]</span><br><span class="line">            void geom(point v2f vertElement[1], inout TriangleStream&lt;v2f&gt; triStream)</span><br><span class="line">            &#123;</span><br><span class="line">                if (vertElement[0].color.r &lt;= 0) return;</span><br><span class="line"></span><br><span class="line">                float size = 10;</span><br><span class="line"></span><br><span class="line">                float4 v1 = vertElement[0].vertex + float4(-size, -size, 0, 0);</span><br><span class="line">                float4 v2 = vertElement[0].vertex + float4(-size, size, 0, 0);</span><br><span class="line">                float4 v3 = vertElement[0].vertex + float4(size, -size, 0, 0);</span><br><span class="line">                float4 v4 = vertElement[0].vertex + float4(size, size, 0, 0);</span><br><span class="line"></span><br><span class="line">                v2f r = (v2f)0;</span><br><span class="line"></span><br><span class="line">                r.vertex = mul(UNITY_MATRIX_VP, v1);</span><br><span class="line">                r.color = vertElement[0].color;</span><br><span class="line">                triStream.Append(r);</span><br><span class="line"></span><br><span class="line">                r.vertex = mul(UNITY_MATRIX_VP, v2);</span><br><span class="line">                r.color = vertElement[0].color;</span><br><span class="line">                triStream.Append(r);</span><br><span class="line"></span><br><span class="line">                r.vertex = mul(UNITY_MATRIX_VP, v3);</span><br><span class="line">                r.color = vertElement[0].color;</span><br><span class="line">                triStream.Append(r);</span><br><span class="line"></span><br><span class="line">                r.vertex = mul(UNITY_MATRIX_VP, v4);</span><br><span class="line">                r.color = vertElement[0].color;</span><br><span class="line">                triStream.Append(r);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            fixed4 frag(v2f i) : SV_Target</span><br><span class="line">            &#123;</span><br><span class="line">                return i.color;</span><br><span class="line">            &#125;</span><br><span class="line">            ENDCG</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.Rendering;</span><br><span class="line"></span><br><span class="line">namespace Hont</span><br><span class="line">&#123;</span><br><span class="line">    public class Foo : MonoBehaviour</span><br><span class="line">    &#123;</span><br><span class="line">        void Start()</span><br><span class="line">        &#123;</span><br><span class="line">            var blueTex = new Texture2D(64, 64);</span><br><span class="line">            for (int x = 0; x &lt; blueTex.width; x++)</span><br><span class="line">                for (int y = 0; y &lt; blueTex.height; y++)</span><br><span class="line">                    blueTex.SetPixel(x, y, Color.blue);</span><br><span class="line">            blueTex.Apply();</span><br><span class="line"></span><br><span class="line">            var mat = new Material(Shader.Find(&quot;Hidden/FooShader&quot;));</span><br><span class="line">            mat.SetTexture(&quot;_Image&quot;, blueTex);</span><br><span class="line">            mat.SetVector(&quot;_ImageSize&quot;, new Vector4(blueTex.width, blueTex.height));</span><br><span class="line">            mat.SetPass(0);</span><br><span class="line">            var tempRT = RenderTexture.GetTemporary(16, 16, 0, RenderTextureFormat.ARGB32, RenderTextureReadWrite.sRGB, 1);</span><br><span class="line">            tempRT.filterMode = FilterMode.Point;</span><br><span class="line">            tempRT.autoGenerateMips = false;</span><br><span class="line">            tempRT.anisoLevel = 0;</span><br><span class="line">            tempRT.wrapMode = TextureWrapMode.Clamp;</span><br><span class="line">            var cacheRT = RenderTexture.active;</span><br><span class="line">            RenderTexture.active = tempRT;</span><br><span class="line">            Graphics.DrawProcedural(MeshTopology.Points, blueTex.width * blueTex.height, 1);</span><br><span class="line">            var tex2D = new Texture2D(16, 16, TextureFormat.ARGB32, false, false);</span><br><span class="line">            tex2D.wrapMode = TextureWrapMode.Clamp;</span><br><span class="line">            tex2D.anisoLevel = 0;</span><br><span class="line">            tex2D.filterMode = FilterMode.Point;</span><br><span class="line">            tex2D.ReadPixels(new Rect(0, 0, 16, 16), 0, 0);</span><br><span class="line">            var firstPixel = tex2D.GetPixel(0, 0);</span><br><span class="line">            Debug.Log(&quot;firstPixel: &quot; + firstPixel);</span><br><span class="line">            RenderTexture.active = cacheRT;</span><br><span class="line">            RenderTexture.ReleaseTemporary(tempRT);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跑了一下代码之后我发现了三个问题，也是没解决的问题，一个是计算结果有误差</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">o.color = float4(0.05, 0, 0, 0);</span><br></pre></td></tr></table></figure><p>输出是0.05结果却有一些出入。</p><p>特别是当返回颜色小于0.1之后，我尝试改变图像格式或者RT等参数依旧没能解决</p><p>第二个问题是开启透明后，透明图片的叠加是有上限的，毕竟深度有限，堆叠二十多层后，后面层会丢失。</p><p>第三个问题是传入图片尺寸过大直接导致带宽爆炸，以至于unity直接假死了，512x512的图片就是26万多的像素要处理，也就是26万多的顶点。</p><p>第三个问题很好解决，控制图片尺寸+让单个顶点采样更多像素即可。</p><p>对于第一个问题，目前还不需要太精确所以没解决但也能用。第二个问题可以用一些方法来缓解</p><p>比如在顶点shader中增加运算量，把返回值分散到rgba四个通道上去。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">uint roll = (roll_width + roll_height) % 4;</span><br><span class="line"></span><br><span class="line">if (roll == 0)</span><br><span class="line">    result = float4(GAIN_VALUE, 0, 0, 0);</span><br><span class="line"></span><br><span class="line">if (roll == 1)</span><br><span class="line">    result = float4(0, GAIN_VALUE, 0, 0);</span><br><span class="line"></span><br><span class="line">if (roll == 2)</span><br><span class="line">    result = float4(0, 0, GAIN_VALUE, 0);</span><br><span class="line"></span><br><span class="line">if (roll == 3)</span><br><span class="line">    result = float4(0, 0, 0, GAIN_VALUE);</span><br></pre></td></tr></table></figure><p>把更多的像素遍历放入顶点中，这样处理图片的顶点数量是原大小/n:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">v2f vert(uint vid : SV_VertexID)</span><br><span class="line">&#123;</span><br><span class="line">    v2f o = (v2f)0;</span><br><span class="line"></span><br><span class="line">    o.vertex = 0;</span><br><span class="line"></span><br><span class="line">    half2 image_size = half2(GRID_SIZE_X * LOOP_IMAGE_SIZE_X, GRID_SIZE_Y * LOOP_IMAGE_SIZE_Y);</span><br><span class="line"></span><br><span class="line">    half y = floor(vid / LOOP_IMAGE_SIZE_X);</span><br><span class="line">    half x = (vid - y * LOOP_IMAGE_SIZE_X) / LOOP_IMAGE_SIZE_X;</span><br><span class="line">    y = y / LOOP_IMAGE_SIZE_Y;</span><br><span class="line">    //将vid转化为x,y坐标</span><br><span class="line"></span><br><span class="line">    for (half rx = 0; rx &lt; GRID_SIZE_X; rx++)</span><br><span class="line">    &#123;</span><br><span class="line">        for (half ry = 0; ry &lt; GRID_SIZE_Y; ry++)</span><br><span class="line">        &#123;</span><br><span class="line">            half xx = x + rx;</span><br><span class="line">            half yy = y + ry;</span><br><span class="line"></span><br><span class="line">            float4 r = Statistics_sample(_Image, _Rec_Color, half4(xx, yy, 0, 0), image_size);</span><br><span class="line"></span><br><span class="line">            o.color += r;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //一个顶点处理多个像素</span><br><span class="line"></span><br><span class="line">    return o;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-测试结果"><a href="#3-测试结果" class="headerlink" title="3.测试结果"></a>3.测试结果</h3><p>最终达到了一个比较不错的结果，我把相关函数封装成了一个类。<br><a href="https://cdn.jsdelivr.net/gh/Yuxushen/CDN/blog/uiSlide.jpg"><img src="https://img-blog.csdnimg.cn/img_convert/b01b2a35e1a5c0959005009066b62707.gif" alt=""></a></p><p>我写了一个涂抹效果demo来测试一下，它通过识别白色像素的数量来判断是否为全部涂完：</p><p>工程文件我丢在了github上: <a href="https://github.com/hont127/Image-Rec-Base-unity-shader-">https://github.com/hont127/Image-Rec-Base-unity-shader-</a></p><h2 id="GUGI-中通过改变像素实现擦除"><a href="#GUGI-中通过改变像素实现擦除" class="headerlink" title="GUGI 中通过改变像素实现擦除"></a>GUGI 中通过改变像素实现擦除</h2><p>这种方法需要改精灵的设置，如下：</p><p><a href="https://cdn.jsdelivr.net/gh/Yuxushen/CDN/blog/uiSlide.jpg"><img src="https://img-blog.csdnimg.cn/img_convert/332fc9ee5572ccb0b77853c36509fe4d.png" alt=""></a></p><p>话不多说，直接上代码：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Reflection.Emit;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.EventSystems;</span><br><span class="line">using UnityEngine.Profiling;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class ChangeTexturePixel : MonoBehaviour, IDragHandler</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt; 擦除的像素数量 &lt;/summary&gt;</span><br><span class="line">    private int m_PixelAcount = 0;</span><br><span class="line">    </span><br><span class="line">    /// &lt;summary&gt; 是否擦除成功 &lt;/summary&gt;</span><br><span class="line">    private bool m_IsDrag = false;</span><br><span class="line">    </span><br><span class="line">    /// &lt;summary&gt; 擦除范围大小 &lt;/summary&gt;</span><br><span class="line">    [SerializeField][Range(10,100)]</span><br><span class="line">    private int Radius = 10;</span><br><span class="line">    </span><br><span class="line">    /// &lt;summary&gt; 擦除完成度（不超过1）&lt;/summary&gt;</span><br><span class="line">    [SerializeField][Range(0,1)] </span><br><span class="line">    private float m_Complete; </span><br><span class="line">    </span><br><span class="line">    private RawImage m_UITex;</span><br><span class="line">    </span><br><span class="line">    private Texture2D m_MyTex;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Color m_Col = Color.clear;</span><br><span class="line">    </span><br><span class="line">    private int[][] m_PixelArray;</span><br><span class="line">  </span><br><span class="line">    private Dictionary&lt;int, TexturePixel&gt; m_TexPixelDic = new Dictionary&lt;int, TexturePixel&gt;();</span><br><span class="line"></span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        m_IsDrag = false;</span><br><span class="line">        m_UITex = GetComponent&lt;RawImage&gt;();</span><br><span class="line">        var tex = m_UITex.texture as Texture2D;</span><br><span class="line"></span><br><span class="line">        m_MyTex = new Texture2D(tex.width, tex.height, TextureFormat.ARGB32,</span><br><span class="line">            false); </span><br><span class="line"></span><br><span class="line">        m_MyTex.SetPixels(tex.GetPixels());</span><br><span class="line">        m_MyTex.Apply();</span><br><span class="line">        m_UITex.texture = m_MyTex;</span><br><span class="line">        </span><br><span class="line">        int value = 0;</span><br><span class="line">        m_PixelArray = new int[m_MyTex.width][];</span><br><span class="line">        for (int i = 0; i &lt; m_PixelArray.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            m_PixelArray[i] = new int[m_MyTex.height];</span><br><span class="line">            for (int j = 0; j &lt; m_MyTex.height; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                m_PixelArray[i][j] = value;</span><br><span class="line"></span><br><span class="line">                m_TexPixelDic.Add(value, new TexturePixel(m_MyTex, i, j));</span><br><span class="line">                value++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    ///  改变Texture2D像素点颜色</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;x&quot;&gt;Texture2D像素点X轴位置&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;y&quot;&gt;Texture2D像素点Y轴位置&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;radius&quot;&gt;改变像素的范围&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;col&quot;&gt;改变后的颜色&lt;/param&gt;</span><br><span class="line">    void ChangePixelColorByCircle(int x, int y, int radius, Color col)</span><br><span class="line">    &#123;</span><br><span class="line">        for (int i = -Radius; i &lt; Radius; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            var py = y + i;</span><br><span class="line">            if (py &lt; 0 || py &gt;= m_MyTex.height)</span><br><span class="line">            &#123;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            for (int j = -Radius; j &lt; Radius; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                var px = x + j;</span><br><span class="line">                if (px &lt; 0 || px &gt;= m_MyTex.width)</span><br><span class="line">                &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                if (new Vector2(px - x, py - y).magnitude &gt; Radius)</span><br><span class="line">                &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Profiler.BeginSample(&quot;text1&quot;);</span><br><span class="line">                TexturePixel tp; //= texPixelDic[pixelArray[MyTex.width - 1][py]];</span><br><span class="line"></span><br><span class="line">                if (px == 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    tp = m_TexPixelDic[m_PixelArray[m_MyTex.width - 1][py]];</span><br><span class="line">                    tp.Scratch(m_Col);</span><br><span class="line">                  </span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                tp = m_TexPixelDic[m_PixelArray[px][py]];</span><br><span class="line">                if (!tp.GetPixel())</span><br><span class="line">                &#123;</span><br><span class="line">                    m_PixelAcount++;</span><br><span class="line">                &#125;</span><br><span class="line">                tp.Scratch(m_Col);</span><br><span class="line">                </span><br><span class="line">                Profiler.EndSample();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Profiler.BeginSample(&quot;text2&quot;);</span><br><span class="line">        m_MyTex.Apply();</span><br><span class="line">        Profiler.EndSample();</span><br><span class="line">        Profiler.BeginSample(&quot;text3&quot;);</span><br><span class="line">        Profiler.EndSample();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     /// &lt;summary&gt;</span><br><span class="line">     ///  擦除点</span><br><span class="line">     /// &lt;/summary&gt;</span><br><span class="line">     /// &lt;param name=&quot;mousePos&quot;&gt;鼠标位置&lt;/param&gt;</span><br><span class="line">     /// &lt;returns&gt;擦除点&lt;/returns&gt;</span><br><span class="line">    Vector2 ScreenPoint2Pixel(Vector2 mousePos)</span><br><span class="line">    &#123;</span><br><span class="line">        float imageWidth = m_UITex.rectTransform.sizeDelta.x;</span><br><span class="line">        float imageHeight = m_UITex.rectTransform.sizeDelta.y;</span><br><span class="line">        Vector3 imagePos = m_UITex.rectTransform.anchoredPosition3D;</span><br><span class="line">        //求鼠标在image上的位置</span><br><span class="line">        float HorizontalPercent =</span><br><span class="line">            (mousePos.x - (Screen.width / 2 + imagePos.x - imageWidth / 2)) / imageWidth; //鼠标在Image 水平上的位置  %</span><br><span class="line">        float verticalPercent =</span><br><span class="line">            (mousePos.y - (Screen.height / 2 + imagePos.y - imageHeight / 2)) / imageHeight; //鼠标在Image 垂直上的位置  %</span><br><span class="line">        float x = HorizontalPercent * m_MyTex.width;</span><br><span class="line">        float y = verticalPercent * m_MyTex.height;</span><br><span class="line">        return new Vector2(x, y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    ///  拖拽中。。。</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;eventData&quot;&gt;拖拽数据&lt;/param&gt;</span><br><span class="line">    public void OnDrag(PointerEventData eventData)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!m_IsDrag)</span><br><span class="line">        &#123;</span><br><span class="line">            var posA = ScreenPoint2Pixel(eventData.position);</span><br><span class="line">            ChangePixelColorByCircle((int) posA.x, (int) posA.y, Radius, m_Col);</span><br><span class="line">            SetAllPixelFadeAlpha();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    ///  擦除完成时调用</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public void SetAllPixelFadeAlpha()</span><br><span class="line">    &#123;</span><br><span class="line">        if (++m_PixelAcount &gt;= m_MyTex.height*m_MyTex.width*m_Complete)</span><br><span class="line">        &#123;  </span><br><span class="line">            m_UITex.color = Color.clear;</span><br><span class="line">            m_IsDrag = true;</span><br><span class="line">            Debug.Log(&quot;擦除完成&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">sing System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class TexturePixel</span><br><span class="line">&#123;</span><br><span class="line">    public Texture2D myTex;</span><br><span class="line">    //float alpha = 1;        //当前透明度</span><br><span class="line">   // int scratchedTime = 0;//被刮的次数</span><br><span class="line">    private int x;      //像素坐标X</span><br><span class="line">    private int y;      //像素坐标Y</span><br><span class="line">    //private bool scratcedPrevious = false;</span><br><span class="line">    //private bool scratcedCurrent = false;</span><br><span class="line">    public TexturePixel(Texture2D tex,int x,int y)</span><br><span class="line">    &#123;</span><br><span class="line">        myTex = tex;</span><br><span class="line">        this.x = x;</span><br><span class="line">        this.y = y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void Scratch( Color targetCol)</span><br><span class="line">    &#123;</span><br><span class="line">        myTex.SetPixel(x,y,targetCol);</span><br><span class="line">      //  scratcedCurrent = true;</span><br><span class="line">        //Debug.Log(&quot;x:&quot;+x+&quot;  y:&quot;+y+&quot;  a &quot;+ targetCol.a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public bool GetPixel()</span><br><span class="line">    &#123;</span><br><span class="line">      Color color =  myTex.GetPixel(x, y);</span><br><span class="line">      </span><br><span class="line">      return color.a &lt;= 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上方法是通过改变Texture2D像素点颜色实现擦除，主要内容：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 设置像素点</span><br><span class="line"> myTex.SetPixel(x,y,targetCol);</span><br><span class="line">// 获取像素点</span><br><span class="line"> myTex.GetPixel(x,y,targetCol);</span><br></pre></td></tr></table></figure><br>项目文件我放在了gitee: <a href="https://gitee.com/ondaly/eraser_-master.git">https://gitee.com/ondaly/eraser_-master.git</a><br><a href="https://gitee.com/ondaly/eraser_-master.git/" title="通过一个小Trick实现shader的像素识别">项目案例</a>查看。</p>]]></content>
      
      
      <categories>
          
          <category> unity </category>
          
          <category> 图形学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
            <tag> ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Timeline 理解与API解读</title>
      <link href="/2021/02/13/Timeline%20%E7%90%86%E8%A7%A3%E4%B8%8EAPI%E8%A7%A3%E8%AF%BB/"/>
      <url>/2021/02/13/Timeline%20%E7%90%86%E8%A7%A3%E4%B8%8EAPI%E8%A7%A3%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://unity.cn/" title="Timeline 理解与API解读">unity 官网</a>查看。<br><a href="https://www.daly.top/">个人博客</a>查看。<br><img src="https://img-blog.csdnimg.cn/img_convert/cecceaf1f2603f5db1c146d0022ae061.png" alt=""></p><p>Timeline自有组件:</p><pre><code>Activation Track    Animation Track      Audio Track     Control Track       Playable Track      Track Group     </code></pre><p>PlayableGraph提供了Timeline的可视化图形结构，暂不支持编辑功能。如图：<br>Playable Track使Timeline具备可扩展性。  </p><pre><code>PlayableAsset: 一个针对资源的基类,可以用于运行时实例化一个Playable脚本所驱动。PlayableBehaviour:可以向PlayableGraph增加用户的行为。PlayableBehaviour必须是连接到激活的输出的PlayableGraph的分支的一部分。关于该Playable的公有方法(都是回调函数)：OnBehaviourPuase ： 当Playable的play state变成PlayState.Paused的时候，这个方法被调用;OnBehaviourPlay ： 当Playable的PlayState变成PlayState.Playing的时候，这个方法被调用;OnGraphStart:   这个方法别调用，当前拥有PlayableBehavior的GraphStart开始的时候； OnGraphStop:   这个方法别调用，当前拥有PlayableBehavior的GraphStop开始的时候；    OnGraphCreate:   这个方法别调用，当前拥有PlayableBehavior的GraphCreate开始的时候；    OnGraphDestory:   这个方法别调用，当前拥有PlayableBehavior的GraphDestory开始的时候    PrepareFrame:   这个方法在Playable的PrepareFrame阶段被调用；    ProcessFrame:   这个方法在Playable的ProcessFrame阶段被调用；   </code></pre><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.Playables;</span><br><span class="line"></span><br><span class="line">[<span class="meta">System.Serializable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LightControlAsset</span> : <span class="title">PlayableAsset</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 由于PlayableAsset是个资源，它不能直接引用场景中的对象。此时ExposedReference会充当一个约定，表示在调用CreatePlayable时会解析一个对象。</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> ExposedReference&lt;Light&gt; light;</span><br><span class="line">    <span class="keyword">public</span> Color color = Color.gray;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> intensity = <span class="number">1f</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Factory method that generates a playable based on this asset</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">override</span> Playable <span class="title">CreatePlayable</span>(<span class="params">PlayableGraph graph, GameObject owner</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;CreatePlayable&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> playable = ScriptPlayable&lt;LightControlBehaviour&gt;.Create(graph);</span><br><span class="line">        <span class="keyword">var</span> lightControlBehaviour = playable.GetBehaviour();</span><br><span class="line">        lightControlBehaviour.light = light.Resolve(graph.GetResolver());</span><br><span class="line">        lightControlBehaviour.color = color;</span><br><span class="line">        lightControlBehaviour.intensity = intensity;</span><br><span class="line">        <span class="keyword">return</span> playable;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>``` C#<br>using UnityEngine;<br>using UnityEngine.Playables;</p><p>/// <summary>/// 目的：确定需要修改Light组件的哪些属性。而且PlayableBehaviour拥有名为ProcessFrame的方法可供重写。/// </summary><br>// A behaviour that is attached to a playable<br>public class LightControlBehaviour : PlayableBehaviour<br>{<br>    public Light light = null;</p><pre><code>public Color color = Color.white;public float intensity = 1;// Called when the owning graph starts playingpublic override void OnGraphStart(Playable playable)&#123;    Debug.Log(&quot;OnGraphStart&quot;);&#125;// Called when the owning graph stops playingpublic override void OnGraphStop(Playable playable)&#123;    Debug.Log(&quot;OnGraphStop&quot;);&#125;// Called when the state of the playable is set to Playpublic override void OnBehaviourPlay(Playable playable, FrameData info)&#123;    Debug.Log(&quot;OnBehaviourPlay&quot;);&#125;// Called when the state of the playable is set to Pausedpublic override void OnBehaviourPause(Playable playable, FrameData info)&#123;    Debug.Log(&quot;OnBehaviourPause&quot;);&#125;// Called each frame while the state is set to Playpublic override void PrepareFrame(Playable playable, FrameData info)&#123;    Debug.Log(&quot;PrepareFrame&quot;);&#125;public override void ProcessFrame(Playable playable, FrameData info, object playerData)&#123;    if (light != null)    &#123;        light.color = color;        light.intensity = intensity;    &#125;    Debug.Log(&quot;ProcessFrame&quot;);&#125;</code></pre><p>}</p><p>``` C#</p><h3 id="Unity-Timeline封装，方便动态设置Timeline控制对象和参数"><a href="#Unity-Timeline封装，方便动态设置Timeline控制对象和参数" class="headerlink" title="Unity Timeline封装，方便动态设置Timeline控制对象和参数"></a>Unity Timeline封装，方便动态设置Timeline控制对象和参数</h3><p><a href="https://cdn.jsdelivr.net/gh/Yuxushen/CDN/blog/unity_timeline2.jpg"><img src="https://img-blog.csdnimg.cn/img_convert/083f8b2de4a7824de71a4b1674eef3de.png" alt=""></a></p><p>TimelineUnit.cs</p><p>using System.Collections.Generic;<br>using UnityEngine;<br>using UnityEngine.Timeline;<br>using UnityEngine.Playables;</p><p>public class TimelineUnit<br>{<br>    public string name;<br>    public PlayableDirector director;<br>    public PlayableAsset asset;<br>    public Dictionary<string, PlayableBinding> bindings;<br>    public Dictionary<string, Dictionary string, PlayableAsset>&gt; clips;</p><pre><code>public void Init(string name, PlayableDirector director, PlayableAsset asset)&#123;    director.playableAsset = asset;    this.name = name;    this.director = director;    this.asset = asset;    bindings = new Dictionary&lt;string, PlayableBinding&gt;();    clips = new Dictionary&lt;string, Dictionary&lt;string, PlayableAsset&gt;&gt;();    foreach (var o in asset.outputs)    &#123;        var trackName = o.streamName;        bindings.Add(trackName, o);        var track = o.sourceObject as TrackAsset;        var clipList = track.GetClips();        foreach (var c in clipList)        &#123;            if (!clips.ContainsKey(trackName))            &#123;                clips[trackName] = new Dictionary&lt;string, PlayableAsset&gt;();            &#125;            var name2Clips = clips[trackName];            if (!name2Clips.ContainsKey(c.displayName))            &#123;                name2Clips.Add(c.displayName, c.asset as PlayableAsset);            &#125;        &#125;    &#125;&#125;public void SetBinding(string trackName, Object o)&#123;    director.SetGenericBinding(bindings[trackName].sourceObject, o);&#125;public T GetTrack&lt;T&gt;(string trackName) where T : TrackAsset&#123;    return bindings[trackName].sourceObject as T;&#125;public T GetClip&lt;T&gt;(string trackName, string clipName) where T : PlayableAsset&#123;    if (clips.ContainsKey(trackName))    &#123;        var track = clips[trackName];        if (track.ContainsKey(clipName))        &#123;            return track[clipName] as T;        &#125;        else        &#123;            Debug.LogError(&quot;GetClip Error, Track does not contain clip, trackName: &quot; + trackName + &quot;, clipName: &quot; + clipName);        &#125;    &#125;    else    &#123;        Debug.LogError(&quot;GetClip Error, Track does not contain clip, trackName: &quot; + trackName + &quot;, clipName: &quot; + clipName);    &#125;    return null;&#125;public void Play()&#123;    director.Play();&#125;</code></pre><p>}</p><p>TimelineHelper.cs</p><p>using UnityEngine;<br>using UnityEngine.Playables;</p><p>public class TimelineHelper<br>{<br>    public static TimelineUnit AddTimeline(GameObject go, string timelineName)<br>    {<br>        var unit = new TimelineUnit();<br>        var director = go.GetComponent<PlayableDirector>();<br>        if (null == director)<br>            director = go.AddComponent<PlayableDirector>();<br>        var asset = Resources.Load<PlayableAsset>(“TimelineRes/“ + timelineName);<br>        unit.Init(timelineName, director, asset);<br>        return unit;<br>    }<br>}</p><p>现在做一个Timeline，然后进行测试</p><p>一个AnimationTrack，一个PlayableTrack，动画轨道不多讲，难点是PlayableTrack，这个是可以自定义逻辑的轨道</p><p>需要写两个类，一个继承PlayableAsset，一个继承PlayableBehaviour</p><p>using UnityEngine;<br>using UnityEngine.Playables;</p><p>public class MoveObjPlayableAsset : PlayableAsset<br>{<br>    public GameObject go;<br>    public Vector3 pos;</p><pre><code>public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)&#123;    var bhv = new MoveObjPlayableBehaviour();    bhv.go = go;    bhv.pos = pos;    return ScriptPlayable&lt;MoveObjPlayableBehaviour&gt;.Create(graph, bhv);&#125;</code></pre><p>}</p><p>using UnityEngine;<br>using UnityEngine.Playables;</p><p>public class MoveObjPlayableBehaviour : PlayableBehaviour<br>{<br>    public GameObject go;<br>    public Vector3 pos;</p><pre><code>public override void OnGraphStart(Playable playable)&#123;    base.OnGraphStart(playable);    Debug.Log(&quot;OnGraphStart=======================&quot;);&#125;public override void OnGraphStop(Playable playable)&#123;    base.OnGraphStop(playable);    Debug.Log(&quot;OnGraphStop=======================&quot;);&#125;public override void OnBehaviourPlay(Playable playable, FrameData info)&#123;    base.OnBehaviourPlay(playable, info);    Debug.Log(&quot;OnBehaviourPlay=======================&quot;);    if (null != go)    &#123;        go.transform.position = pos;    &#125;&#125;public override void OnBehaviourPause(Playable playable, FrameData info)&#123;    base.OnBehaviourPause(playable, info);    Debug.Log(&quot;OnBehaviourPause=======================&quot;);    if (null != go)    &#123;        go.transform.position = Vector3.zero;    &#125;&#125;public override void OnBehaviourDelay(Playable playable, FrameData info)&#123;    base.OnBehaviourDelay(playable, info);    Debug.Log(&quot;OnBehaviourDelay=======================&quot;);&#125;</code></pre><p>}</p><p>这样，就可以将MoveObjPlayableAsset脚本直接拖动到PlayableTrack轨道上，具体的脚本逻辑在MoveObjPlayableBehaviour中写，我这里的逻辑是改变物体的坐标，具体逻辑就看具体需求了，这里只是举个例子</p><p>程序入口我放在一个runner的脚本里，挂在场景中的一个物体上</p><p>using UnityEngine;</p><p>public class Runner : MonoBehaviour<br>{<br>    void Start()<br>    {<br>        var go = new GameObject(“TimelineGo”);<br>        var unit = TimelineHelper.AddTimeline(go, “myTimeline”);<br>        unit.director.extrapolationMode = UnityEngine.Playables.DirectorWrapMode.Loop;<br>        unit.SetBinding(“at”, go);</p><pre><code>    var p = unit.GetClip&lt;MoveObjPlayableAsset&gt;(&quot;myPlayable&quot;, &quot;b&quot;);    p.go = gameObject;    unit.Play();&#125;</code></pre><p>}</p><p>运行就可以看到有一个TimelineGo物体挂了Timeline运行了</p>]]></content>
      
      
      <categories>
          
          <category> unity </category>
          
          <category> 理论知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
            <tag> timeline </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>存读档界面UI滑动效果</title>
      <link href="/2021/02/13/Unity%20%E7%A5%9E%E5%A5%87%E7%9A%84UI%E6%8E%A7%E4%BB%B6ScrollRect/"/>
      <url>/2021/02/13/Unity%20%E7%A5%9E%E5%A5%87%E7%9A%84UI%E6%8E%A7%E4%BB%B6ScrollRect/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="存读档界面UI滑动效果"><a href="#存读档界面UI滑动效果" class="headerlink" title="存读档界面UI滑动效果"></a>存读档界面UI滑动效果</h1><p><a href="https://www.daly.top/">原文</a>查看。<br><a href="https://www.daly.top/">个人博客</a>查看。<br><a href="https://cdn.jsdelivr.net/gh/Yuxushen/CDN/blog/uiSlide.jpg"><img src="https://img-blog.csdnimg.cn/img_convert/cae38bd180783ad2d8d251b249a15c58.png" alt=""></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using DG.Tweening;</span><br><span class="line">using DSFramework;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.Serialization;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public enum FileDataType</span><br><span class="line">&#123;</span><br><span class="line">    NONE,</span><br><span class="line">    SAVE,</span><br><span class="line">    LOAD,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 存读档类</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public class FileDataPageView : PageViewBase</span><br><span class="line">&#123;</span><br><span class="line">    private const uint PageCount = 5;</span><br><span class="line">    private const uint Spacing = 35;</span><br><span class="line"></span><br><span class="line">    private FileDataType type;</span><br><span class="line"></span><br><span class="line">    [FormerlySerializedAs(&quot;m_HorizontalLayoutGroups&quot;)] [SerializeField]</span><br><span class="line">    private HorizontalLayoutGroup m_HorizontalLayoutGroups;</span><br><span class="line"></span><br><span class="line">    [FormerlySerializedAs(&quot;m_ContentSizeFitter&quot;)] [SerializeField]</span><br><span class="line">    private ContentSizeFitter m_ContentSizeFitter;</span><br><span class="line"></span><br><span class="line">    [FormerlySerializedAs(&quot;m_ScrollRect&quot;)] [SerializeField]</span><br><span class="line">    private ScrollRect m_ScrollRect;</span><br><span class="line"></span><br><span class="line">    [SerializeField] private RectTransform m_ContentRect;</span><br><span class="line"></span><br><span class="line">    private DSImageButton m_ColseButton;</span><br><span class="line">    private DSFadeButton m_LeftPageButton;</span><br><span class="line">    private DSFadeButton m_RightPageButton;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private bool PageMoveing;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private void ContentSizeFitterInit(bool value)</span><br><span class="line">    &#123;</span><br><span class="line">        m_ContentSizeFitter.horizontalFit = ContentSizeFitter.FitMode.PreferredSize;</span><br><span class="line">        m_ContentSizeFitter.verticalFit = ContentSizeFitter.FitMode.Unconstrained;</span><br><span class="line"></span><br><span class="line">        m_ContentSizeFitter.enabled = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void HorizontalLayoutGroupInit()</span><br><span class="line">    &#123;</span><br><span class="line">        m_HorizontalLayoutGroups.spacing = Spacing;</span><br><span class="line">        m_HorizontalLayoutGroups.childAlignment = TextAnchor.MiddleCenter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ScrollRectInit()</span><br><span class="line">    &#123;</span><br><span class="line">        m_ScrollRect.horizontal = true;</span><br><span class="line">        m_ScrollRect.vertical = false;</span><br><span class="line">        m_ScrollRect.movementType = ScrollRect.MovementType.Elastic;</span><br><span class="line">        m_ScrollRect.elasticity = 0.1f;</span><br><span class="line">        m_ScrollRect.inertia = true;</span><br><span class="line">        m_ScrollRect.decelerationRate = 0.135f;</span><br><span class="line">        m_ScrollRect.scrollSensitivity = 1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void Init(params object[] option)</span><br><span class="line">    &#123;</span><br><span class="line">        // RegisterUIEvent();</span><br><span class="line">        base.Init(option);</span><br><span class="line"></span><br><span class="line">        ScrollRectInit();</span><br><span class="line">        HorizontalLayoutGroupInit();</span><br><span class="line">        ContentSizeFitterInit(m_ScrollRect.content.childCount &gt;= PageCount);</span><br><span class="line"></span><br><span class="line">        m_ColseButton = transform.Find(&quot;Content/ButtonGroup/CloseButton&quot;).GetComponent&lt;DSImageButton&gt;();</span><br><span class="line">        m_LeftPageButton = transform.Find(&quot;Content/ButtonGroup/LeftPageButton&quot;).GetComponent&lt;DSFadeButton&gt;();</span><br><span class="line">        m_RightPageButton = transform.Find(&quot;Content/ButtonGroup/RightPageButton&quot;).GetComponent&lt;DSFadeButton&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        m_LeftPageButton.OnClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            if (PageMoveing)</span><br><span class="line">                return;</span><br><span class="line"></span><br><span class="line">            float anchoredPositionX = m_ContentRect.anchoredPosition.x + 2500 &lt;= 0</span><br><span class="line">                ? m_ContentRect.anchoredPosition.x + 2500</span><br><span class="line">                : 0;</span><br><span class="line"></span><br><span class="line">            PageMoveing = true;</span><br><span class="line">            m_ContentRect.DOAnchorPos(new Vector2(anchoredPositionX, m_ContentRect.anchoredPosition.y), 0.8f).SetEase(Ease.OutExpo)</span><br><span class="line">                .OnComplete(</span><br><span class="line">                    () =&gt; &#123; PageMoveing = false; &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        m_RightPageButton.OnClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            if (PageMoveing)</span><br><span class="line">                return;</span><br><span class="line">            </span><br><span class="line">            float anchoredPositionX = m_ContentRect.anchoredPosition.x - 2500 &gt;= -m_ContentRect.sizeDelta.x</span><br><span class="line">                ? m_ContentRect.anchoredPosition.x - 2500</span><br><span class="line">                : -m_ContentRect.sizeDelta.x;</span><br><span class="line">            PageMoveing = true;</span><br><span class="line">            m_ContentRect.DOAnchorPos(new Vector2(anchoredPositionX, m_ContentRect.anchoredPosition.y), 0.8f).SetEase(Ease.OutExpo)</span><br><span class="line">                .OnComplete(</span><br><span class="line">                    () =&gt; &#123; PageMoveing = false; &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        m_ColseButton.OnClick.AddListener(() =&gt; &#123; m_GameEntry.UI.ClosePage(); &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void OnDestroy()</span><br><span class="line">    &#123;</span><br><span class="line">        m_ColseButton.OnClick.RemoveAllListeners();</span><br><span class="line">        base.OnDestory();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected override void SetKeyUI()</span><br><span class="line">    &#123;</span><br><span class="line">        if (Input.GetKeyDown(KeyCode.Escape))</span><br><span class="line">        &#123;</span><br><span class="line">            m_GameEntry.UI.ClosePage();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> unity </category>
          
          <category> 理论知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
            <tag> ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity 游戏icon压缩格式设置</title>
      <link href="/2021/02/13/Unity%E6%B8%B8%E6%88%8Ficon%E5%8E%8B%E7%BC%A9%E6%A0%BC%E5%BC%8F%E8%AE%BE%E7%BD%AE/"/>
      <url>/2021/02/13/Unity%E6%B8%B8%E6%88%8Ficon%E5%8E%8B%E7%BC%A9%E6%A0%BC%E5%BC%8F%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Unity游戏icon压缩格式设置（解决图标模糊不清晰问题）"><a href="#Unity游戏icon压缩格式设置（解决图标模糊不清晰问题）" class="headerlink" title="Unity游戏icon压缩格式设置（解决图标模糊不清晰问题）"></a>Unity游戏icon压缩格式设置（解决图标模糊不清晰问题）</h2><p><a href="https://unity.cn/" title="Unity游戏icon压缩格式设置（解决图标模糊不清晰问题）">原文</a>查看。</p><p><a href="https://img-blog.csdnimg.cn/1d1ed1a768674e6d9c94a276200af1c5.png"><img src="https://img-blog.csdnimg.cn/1d1ed1a768674e6d9c94a276200af1c5.png" alt=""></a></p><p>我们打出app安装到真机上之后，发现桌面上的icon很模糊，有可能就是因为你的icon格式设置的问题。</p><p>icon的格式设置改成如下（注意标红的地方）：</p><pre><code>Texture: Default    Texture: 2D    sRGB(Color Texture): true    Alpha Source: Input Texture Alpha    Alpha Is Transparency: true （如果有透明通道，一般是图标圆角，这个要设置为true）Advanced    Non Power of 2: None    Read/Write Enabled: false    Generate Mip Maps: false    Wrap Mode: ClampFilter Mode: Trilinear</code></pre><p>如果图标有透明通道，一般是图标圆角，压缩格式要使用RGBA，不可以是RGB也不可一世ETC</p><hr><p>关于Non Power of 2<br>Unity导入的图片分辨率要求是2的N次幂，如果不是2的N次幂，会根据设置进行缩放：None 无，To nearest 到最近的，To larger 到较大的，To smaller 到较小的</p><p>关于Generate Mip Maps<br>使用Generate Mip Maps后，会生成该图片的低分辨图片（1/2,1/4,1/8…八个小贴图），这些小图会使生成的资源文件变大1/3，在3D渲染时Unity会根据物体显示的大小（或者距离）自动选择不同的分辨率以提高渲染效率。 一般来说，2D显示用的图片不会有这种需求，所以关闭这个选项可以减少包体的大小。</p><p>关于 Wrap Mode<br>循环模式（重复或强制拉伸）。Repeat：重复平铺，Clamp: 拉伸。</p><p>关于Filter Mode<br>当该纹理由于3D变换进行拉伸时，它将如何被过滤插值。共有三种选择：<br>Point 单点插值，纹理将变得块状化（blocky up close）；<br>Bilinear 双线性插值，纹理将变得模糊（blurry up close）；<br>Trilinear 三线性插值，类似Bilinear，但是纹理还会在不同的mip水平之间（between the different mip levels）进行模糊。</p>]]></content>
      
      
      <categories>
          
          <category> unity </category>
          
          <category> 理论知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>unity 常用特性</title>
      <link href="/2021/02/13/Untiy-%E5%B8%B8%E7%94%A8%E7%89%B9%E6%80%A7/"/>
      <url>/2021/02/13/Untiy-%E5%B8%B8%E7%94%A8%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.daly.top/">个人博客</a>查看。<img src="https://cdn.jsdelivr.net/gh/Yuxushen/CDN/blog/tx1.gif" alt="](https://img-blog.csdnimg.cn/img_convert/3cddc9673af8b9271075ea538084ef03.gif)"></p><ul><li><p>重命名不丢失数据<br>[FormerlySerializedAs(“对象名”)] </p></li><li><p>在编辑模式下执行代码<br>[ExecuteInEditorMode]</p></li><li><p>防止将相同类型（或子类型）的 MonoBehaviour 多次添加到 GameObject。<br>[DisallowMultipleComponent]</p></li><li><p>程序集级别的属性。具有该属性的程序集中的任何类都将被视为编辑器类。<br>[AssemblyIsEditorAssembly]</p></li><li><p>使脚本的实例总是执行，无论是作为播放模式的一部分还是编辑时。<br> [ExecuteAlways]</p><ul><li><p>标记方法已过时<br>[system.obsolete(“注释”)]</p></li><li><p>把公有字段的隐藏<br>[HideInInspector]</p></li><li><p>第一次点击到父物体上（挂载到类上）<br>[SelectionBase]</p></li><li><p>属性捆绑<br>[RequireComponent(typeof(绑定的组件类型)]</p></li><li><p>创建菜单属性<br>[MenuItem(“菜单名/属性名”)]</p></li><li><p>创建菜单子节点<br>[AddComponentMenu(path)]</p></li><li><p>访问网站<br>[HelpURL(“Https://xxxx.com”)]</p></li><li><p>[Tooltip] 提示</p></li><li><p>[Heade]  加粗</p></li><li><p>[Range(minnum,maxNum)] 取值范围</p></li><li><p>[TextArea] 文本框扩大</p></li><li><p>[Multiline] 文本框扩大</p></li><li><p>[ContextMenu] 调用脚本</p></li><li><p>[callNull] 判断不为空</p></li><li><p>[Toggle(“value”)] 序列化为bool值 </p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> unity </category>
          
          <category> 理论知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity 原生插件</title>
      <link href="/2021/02/12/Unity-%E5%8E%9F%E7%94%9F%E6%8F%92%E4%BB%B6/"/>
      <url>/2021/02/12/Unity-%E5%8E%9F%E7%94%9F%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Plugin-Inspector"><a href="#Plugin-Inspector" class="headerlink" title="Plugin Inspector"></a>Plugin Inspector</h2><p>使用 Plugin Inspector 可指定 Unity 加载和引用插件文件时依据的条件。还可以为插件指定其他平台特定的各种设置。</p><p>在 Project 窗口中选择插件一个文件来查看 Plugin Inspector：</p><p><a href="https://docs.unity.cn/cn/current/Manual/PluginInspector.html"><img src="https://cdn.jsdelivr.net/gh/Yuxushen/CDN/blog/cj/cj1.png" alt=""></a>)</p><p>General<br>Auto Reference 设置用于控制项目中其他程序集和程序集定义引用插件文件的方式。</p><p>如果选中 Auto Reference（默认设置），则所有预定义程序集和程序集定义自动引用插件文件。如果要显式声明对插件的引用，请取消选中 Auto Reference。</p><p>使用 Assembly Definition Inspector 窗口可以声明对程序集定义的插件文件的引用。请参阅脚本编译和程序集定义文件以了解更多信息。</p><p>重要信息：取消选中 Auto Reference 时，不能从 Unity 为项目创建的预定义程序集引用插件。这些预定义程序集包含项目中尚未使用程序集定义文件分配给其他程序集的所有脚本。如果一个插件已取消选中 Auto Reference 属性，只有使用程序集定义文件创建的程序集中包含的代码才能引用该插件中的类、函数或其他资源。</p><p>若要限制可引用插件（通过显式声明对该插件的所有引用）的范围，请将 Auto Reference 设置为 false。例如，如果项目中只有一组脚本使用插件，那么可以为这些脚本创建一个程序集定义文件，并创建对该插件的显式引用。因为在整个项目中不再自动引用该插件，所以项目中的其他脚本不会误用该插件。（多个程序集可以使用该插件，但是所有程序集必须显式声明此依赖关系。）另外，如果更改插件，则只需重新编译相关程序集，而不必重新编译整个项目。</p><p>还可以使用对插件的显式引用，防止资源包中使用的插件与导入了此包的项目中的其他代码发生冲突。</p><p>Select platforms for plugin<br>使用 Select platforms for plugin 设置可以定义一些与插件文件兼容并要使用该插件文件的平台。平台列表包括 Editor 本身（适用于播放模式以及编辑时运行的任何脚本）、Standalone 以及安装了 Unity 构建支持包的平台（例如 Android、iOS 和 WebGL）。</p><p>可以选中 Any Platform 并（可选）排除个别平台。或者也可以取消选中 Any Platform 并（可选）包含个别平台。</p><p>Platform settings<br>选择平台后，可从下面单独的 Platform Settings 部分中指定其他选项，例如 CPU 类型和特定操作系统。Inspector 窗口的此区域包含每个选定平台的选项卡。一些平台没有设置，或只有少数设置（例如 CPU 和操作系统选择）。</p><p>如有可能，Inspector 仅显示适用于特定平台上的插件类型的设置。例如，对于带有 .dll 扩展名的原生插件文件，Inspector 只显示适用于 Windows 的选项，因为此类插件只能用于 Windows。</p><p>注意：无法卸载原生插件。如果 Editor 已经加载一个插件，那么即使在同一 Editor 会话中更改了该插件的设置，该插件仍会保持加载。必须重新启动 Unity 才能卸载该插件。</p><p>Editor 设置<br>使用 Editor 平台设置可以指定插件兼容的 CPU 架构和操作系统。</p><p><a href="https://docs.unity.cn/cn/current/Manual/PluginInspector.html"><img src="https://cdn.jsdelivr.net/gh/Yuxushen/CDN/blog//cj/cj2.png" alt=""></a>)</p><p>大多数托管插件与任何 CPU 和操作系统都兼容，但是原生插件通常只与单个操作系统兼容，并且根据其编译方式，可能只与单个 CPU 架构兼容。</p><p>例如，如果选择 CPU X86，Unity 会在运行旧版本的 32 位 Editor 时加载插件，但是在运行 64 位版时不加载插件。</p><p>同样，如果选择 OS Windows，Unity 会在 Windows 系统上运行 Editor 时加载插件，但在 OS X 或 Linux 系统上运行时不加载插件。</p><p>独立平台设置<br>对于独立平台（Windows、OS X、Linux），可以选择与库兼容的 CPU 架构。对于托管库，除非访问特定的系统 API，否则它们通常与任何操作系统和架构都兼容。原生库仅与单个操作系统兼容，但可能与 32 位和/或 64 位 CPU 架构兼容。</p><p>另请参阅：独立平台的 Player 设置。</p><p>通用 Windows 平台<br>通用 Windows 平台插件设置将在相应的部分中具体介绍。请参阅：</p><p>通用 Windows 平台：.NET 脚本后端上的插件</p><p>通用 Windows 平台：IL2CPP 脚本后端上的插件</p><p>Android<br>对于可能与 Android 兼容的插件文件，可以选择 CPU 架构。所选的架构必须与编译库时针对的架构匹配。Unity 不会验证是否已选择正确的设置。</p><p>iOS 和 tvOS<br>iOS 和 tvOS 设置可用于指定插件所依赖的 iOS 框架（如有）。</p><p><a href="https://docs.unity.cn/cn/current/Manual/PluginInspector.html"><img src="https://cdn.jsdelivr.net/gh/Yuxushen/CDN/blog//cj/cj3.png" alt=""></a></p><p>对于动态加载的库，以及包含动态加载的库或运行时需要加载的任何资产和资源的捆绑包和框架，请选中 Add to Embedded Binaries 选项。选中此选项后，Unity 将设置 Xcode 项目选项，从而将插件文件复制到最终应用程序包。</p><p>对于必须编译到构建中的插件源代码文件，可以在 Compile Flags 字段中指定编译时需要的任何标志。</p><h2 id="Define-Constraints"><a href="#Define-Constraints" class="headerlink" title="Define Constraints"></a>Define Constraints</h2><p>使用 Define Constraints 设置可以指定一些符号，必须定义（或取消定义）这些符号才能使用插件文件。</p><p>Unity 仅在已满足所有 Define Constraints 时才加载和引用插件。约束的作用与 C# 中的 #if 预处理器指令类似，但在程序集级别（而不是脚本级别）运行。必须定义 Define Constraints 设置中的所有符号，才能满足这些约束。还可以用否定 !（叹号）符号作为符号的前缀，指定必须取消定义该符号。例如，如果在 Define Constraints 中指定以下符号：</p><p><a href="https://docs.unity.cn/cn/current/Manual/PluginInspector.html"><img src="https://cdn.jsdelivr.net/gh/Yuxushen/CDN/blog//cj/cj4.png" alt=""></a></p><p>当未定义符号 ENABLE_IL2CPP 且已定义符号 UNITY_2018_3_OR_NEWER 时，满足这些约束。或者换言之，仅在 Unity 2018.3 或更高版本的非 IL2CPP 脚本运行时中才加载和引用此程序集。</p><p>可以使用 Unity 的任何内置定义符号或者项目的 Scripting Define Symbols Player 设置中定义的任何符号。请参阅平台相关的编译以了解更多信息（包括内置符号的列表）。请注意，<strong>Scripting Define Symbols</strong> 设置与具体平台相关。确保在所有相关平台上都定义了必要的符号。</p><p>插件检测<br>Unity 通过文件扩展名来检测 Assets 文件夹中的文件是否为插件。具有以下扩展名的文件将视为插件：</p><ul><li>.dll</li><li>.winmd</li><li>.so</li><li>.jar</li><li>.aar</li><li>.xex</li><li>.def</li><li>.suprx</li><li>.prx</li><li>.sprx</li><li>.rpl</li><li>.cpp</li><li>.cc</li><li>.c</li><li>.h</li><li>.jslib</li><li>.jspre</li><li>.bc</li><li>.a</li><li>.m</li><li>.mm</li><li>.swift</li><li>.xib</li></ul><p>Unity 还将某些文件夹视为捆绑插件。Unity 并不在此类文件夹中寻找其他插件文件，所以文件夹中的所有内容被视为单个插件。在文件夹包含以下扩展名之一时，Unity 会检测该文件夹是否为捆绑插件：</p><ul><li>.framework</li><li>.bundle</li><li>.plugin</li><li>最后，Unity 将父级路径与 Assets/Plugins/Android/ 完全匹配的文件夹视为 Android 库插件文件夹。Unity 对此类文件夹的处理方式与包含特殊扩展名 .plugin、.bundle 和 .framework 的文件夹相同。</li></ul><p>默认设置<br>Unity 根据插件所在的文件夹，设置插件文件的导入设置的默认值：<br><a href="https://docs.unity.cn/cn/current/Manual/PluginInspector.html"><img src="https://cdn.jsdelivr.net/gh/Yuxushen/CDN/blog//cj/cj5.png" alt=""></a></p><p>2018–11–26</p><p>删除了三星电视支持。</p><p>在 2018.3 版中添加了用于插件的 Auto Reference 和 Define Constraints 设置</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 理论知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity 事件系统</title>
      <link href="/2021/02/12/Unity-%E4%BA%8B%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
      <url>/2021/02/12/Unity-%E4%BA%8B%E4%BB%B6%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.daly.top/">个人博客</a>查看。</p><h2 id="一、-消息系统"><a href="#一、-消息系统" class="headerlink" title="一、 消息系统"></a>一、 消息系统</h2><p>新的 UI 系统使用一种消息系统来取代 SendMessage。该系统是纯 C# 系统，旨在解决 SendMessage 存在的一些问题。该系统使用可在 MonoBehaviour 上实现的自定义接口来指示组件能够从消息系统接收回调。调用时会指定目标游戏对象；该调用将在游戏对象的所有（实现了指定接口以据此发出该调用的）组件上发出。借助消息系统可传递自定义用户数据，并可指定事件应在游戏对象层级视图中传播的距离：应该仅为指定的游戏对象执行，还是应该在子对象和父对象上也执行。除此之外，消息框架还提供 helper 函数来搜索和查找实现了给定消息接口的游戏对象。        </p><p>消息系统是通用型系统，不仅可用于 UI 系统，还可用于一般游戏代码。添加自定义消息事件相对简单，借助 UI 系统用于所有事件处理的相同框架即可实现。    </p><h3 id="如何定义自定义消息？"><a href="#如何定义自定义消息？" class="headerlink" title="如何定义自定义消息？"></a>如何定义自定义消息？</h3><p>如果希望定义自定义消息，此过程相对简单。在 UnityEngine.EventSystems 命名空间中，有一个名为“IEventSystemHandler”的基本接口。从此接口扩展的任何内容都可以视为通过消息系统接收事件的目标。     </p><p>要发送消息，可使用一个静态 helper 类来执行此操作。在参数方面，需要消息的目标对象、一些特定于用户的数据以及一个映射到所需目标消息接口中特定函数的仿函数 (functor)。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExecuteEvents.Execute&lt;ICustomMessageTarget&gt;(target, null, (x,y)=&gt;x.Message1());</span><br></pre></td></tr></table></figure><br>此代码将在游戏对象目标上实现了 ICustomMessageTarget 接口的所有组件上执行 Message1 函数。ExecuteEvents 类的脚本文档中介绍了执行函数的其他形式，例如在子对象或父对象中执行。</p><h2 id="二、-支持的事件"><a href="#二、-支持的事件" class="headerlink" title="二、 支持的事件"></a>二、 支持的事件</h2><p>事件系统支持许多事件，并可在用户编写的自定义输入模块中进一步自定义它们。</p><p>独立输入模块和触摸输入模块支持的事件由接口提供，通过实现该接口即可在 MonoBehaviour 上实现这些事件。如果配置了有效的事件系统，则会在正确的时间调用事件。</p><ul><li>IPointerEnterHandler - OnPointerEnter - 当指针进入对象时调用</li><li>IPointerExitHandler - OnPointerExit - 当指针退出对象时调用</li><li>IPointerDownHandler - OnPointerDown - 在对象上按下指针时调用</li><li>IPointerUpHandler - OnPointerUp - 松开指针时调用（在指针正在点击的游戏对象上调用）</li><li>IPointerClickHandler - OnPointerClick - 在同一对象上按下再松开指针时调用</li><li>IInitializePotentialDragHandler - OnInitializePotentialDrag - 在找到拖动目标时调 用，可用于初始化值</li><li>IBeginDragHandler - OnBeginDrag - 即将开始拖动时在拖动对象上调用</li><li>IDragHandler - OnDrag - 发生拖动时在拖动对象上调用</li><li>IEndDragHandler - OnEndDrag - 拖动完成时在拖动对象上调用</li><li>IDropHandler - OnDrop - 在拖动目标对象上调用</li><li>IScrollHandler - OnScroll - 当鼠标滚轮滚动时调用</li><li>IUpdateSelectedHandler - OnUpdateSelected - 每次勾选时在选定对象上调用</li><li>ISelectHandler - OnSelect - 当对象成为选定对象时调用</li><li>IDeselectHandler - OnDeselect - 取消选择选定对象时调用</li><li>IMoveHandler - OnMove - 发生移动事件（上、下、左、右等）时调用</li><li>ISubmitHandler - OnSubmit - 按下 Submit 按钮时调用</li><li>ICancelHandler - OnCancel - 按下 Cancel 按钮时调用</li></ul><h2 id="三、射线投射器"><a href="#三、射线投射器" class="headerlink" title="三、射线投射器"></a>三、射线投射器</h2><p>  事件系统需要一种方法来检测当前输入事件需要发送到的位置，而此方法由射线投射器 (Raycaster) 提供。给定屏幕空间位置的情况下，射线投射器将收集所有潜在目标，确定它们是否在给定位置下，然后返回最接近屏幕的对象。提供了几种类型的射线投射器：</p><ul><li>图形射线投射器 (Graphic Raycaster) - 用于 UI 元素，位于画布上，并在画布中搜索</li><li>2D 物理射线投射器 (Physics 2D Raycaster) - 用于 2D 物理元素</li><li>物理射线投射器 (Physics Raycaster) - 用于 3D 物理元素     </li></ul><p>当场景中存在并启用了射线投射器时，只要从输入模块发出查询，事件系统就会使用该射线投射器。</p><p>如果使用多个射线投射器，那么这些射线投射器都会进行针对性投射，并且结果将根据与元素的距离进行排序。</p>]]></content>
      
      
      <categories>
          
          <category> unity </category>
          
          <category> 理论知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
